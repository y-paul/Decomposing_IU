<?xml version="1.0" ?>
<PsychoPy2experiment encoding="utf-8" version="2022.2.4">
  <Settings>
    <Param val="use prefs" valType="str" updates="None" name="Audio latency priority"/>
    <Param val="pygame" valType="str" updates="None" name="Audio lib"/>
    <Param val="" valType="str" updates="None" name="Completed URL"/>
    <Param val="auto" valType="str" updates="None" name="Data file delimiter"/>
    <Param val="u'data/%s_%s_%s' % (expInfo['participant'], expName, expInfo['date'])" valType="code" updates="None" name="Data filename"/>
    <Param val="True" valType="bool" updates="None" name="Enable Escape"/>
    <Param val="{'participant': '', 'session': '001', 'proid': '', 'studid': '', 'sessid': ''}" valType="code" updates="None" name="Experiment info"/>
    <Param val="True" valType="bool" updates="None" name="Force stereo"/>
    <Param val="True" valType="bool" updates="None" name="Full-screen window"/>
    <Param val="" valType="str" updates="None" name="HTML path"/>
    <Param val="" valType="str" updates="None" name="Incomplete URL"/>
    <Param val="testMonitor" valType="str" updates="None" name="Monitor"/>
    <Param val="['stim/problem_set_2.csv', 'stim/button_choose.png', 'stim/button_choose_pressed.png', 'stim/button_raw.xcf', 'stim/mouse_move.wav', 'stim/pains.csv', 'stim/problem_set.csv', 'stim/side_effects.csv']" valType="fileList" updates="None" name="Resources"/>
    <Param val="False" valType="bool" updates="None" name="Save csv file"/>
    <Param val="False" valType="bool" updates="None" name="Save excel file"/>
    <Param val="False" valType="bool" updates="None" name="Save hdf5 file"/>
    <Param val="True" valType="bool" updates="None" name="Save log file"/>
    <Param val="True" valType="bool" updates="None" name="Save psydat file"/>
    <Param val="True" valType="bool" updates="None" name="Save wide csv file"/>
    <Param val="1" valType="num" updates="None" name="Screen"/>
    <Param val="True" valType="bool" updates="None" name="Show info dlg"/>
    <Param val="False" valType="bool" updates="None" name="Show mouse"/>
    <Param val="height" valType="str" updates="None" name="Units"/>
    <Param val="" valType="str" updates="None" name="Use version"/>
    <Param val="[1080, 1920]" valType="code" updates="None" name="Window size (pixels)"/>
    <Param val="avg" valType="str" updates="None" name="blendMode"/>
    <Param val="$[1.000,1.000,1.000]" valType="str" updates="None" name="color"/>
    <Param val="rgb" valType="str" updates="None" name="colorSpace"/>
    <Param val="100.1.1.1" valType="str" updates="None" name="elAddress"/>
    <Param val="FILTER_LEVEL_2" valType="str" updates="None" name="elDataFiltering"/>
    <Param val="FILTER_LEVEL_OFF" valType="str" updates="None" name="elLiveFiltering"/>
    <Param val="EYELINK 1000 DESKTOP" valType="str" updates="None" name="elModel"/>
    <Param val="ELLIPSE_FIT" valType="str" updates="None" name="elPupilAlgorithm"/>
    <Param val="PUPIL_AREA" valType="str" updates="None" name="elPupilMeasure"/>
    <Param val="1000" valType="num" updates="None" name="elSampleRate"/>
    <Param val="False" valType="bool" updates="None" name="elSimMode"/>
    <Param val="RIGHT_EYE" valType="str" updates="None" name="elTrackEyes"/>
    <Param val="PUPIL_CR_TRACKING" valType="str" updates="None" name="elTrackingMode"/>
    <Param val="int_un_pt_desktop" valType="str" updates="None" name="expName"/>
    <Param val="on Sync" valType="str" updates="None" name="exportHTML"/>
    <Param val="None" valType="str" updates="None" name="eyetracker"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="gpAddress"/>
    <Param val="4242" valType="num" updates="None" name="gpPort"/>
    <Param val="ioHub" valType="str" updates="None" name="keyboardBackend"/>
    <Param val="exp" valType="code" updates="None" name="logging level"/>
    <Param val="('MIDDLE_BUTTON',)" valType="list" updates="None" name="mgBlink"/>
    <Param val="CONTINUOUS" valType="str" updates="None" name="mgMove"/>
    <Param val="0.5" valType="num" updates="None" name="mgSaccade"/>
    <Param val="0.6" valType="num" updates="None" name="plConfidenceThreshold"/>
    <Param val="True" valType="bool" updates="None" name="plPupilCaptureRecordingEnabled"/>
    <Param val="" valType="str" updates="None" name="plPupilCaptureRecordingLocation"/>
    <Param val="127.0.0.1" valType="str" updates="None" name="plPupilRemoteAddress"/>
    <Param val="50020" valType="num" updates="None" name="plPupilRemotePort"/>
    <Param val="1000" valType="num" updates="None" name="plPupilRemoteTimeoutMs"/>
    <Param val="False" valType="bool" updates="None" name="plPupillometryOnly"/>
    <Param val="psychopy_iohub_surface" valType="str" updates="None" name="plSurfaceName"/>
    <Param val="" valType="str" updates="None" name="tbLicenseFile"/>
    <Param val="" valType="str" updates="None" name="tbModel"/>
    <Param val="60" valType="num" updates="None" name="tbSampleRate"/>
    <Param val="" valType="str" updates="None" name="tbSerialNo"/>
  </Settings>
  <Routines>
    <Routine name="choose">
      <CodeComponent name="handle_prerand">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;a_where = Math.round(Math.random())&amp;#10;if (a_where == 1) {&amp;#10;    a_where = &quot;l&quot;&amp;#10;    psychoJS.experiment.addData(&quot;a_shown&quot;, &quot;l&quot;)&amp;#10;    problem = {&quot;A&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)}, &quot;B&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;    } else {&amp;#10;    a_where = &quot;r&quot;&amp;#10;    psychoJS.experiment.addData(&quot;a_shown&quot;, &quot;r&quot;)&amp;#10;    problem = {&quot;B&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)}, &quot;A&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p), &quot;v_se&quot;: b_side_effect_v,&amp;#10;    &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;        }&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="&amp;#10;a_where = random.choice([&quot;l&quot;, &quot;r&quot;])&amp;#10;thisExp.addData(&quot;a_shown&quot;, a_where)&amp;#10;&amp;#10;if a_where == &quot;l&quot;:&amp;#10;    problem = {&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }&amp;#10;else:&amp;#10;    problem = {&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if a_where == &quot;l&quot;:&amp;#10;    problem = {&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }&amp;#10;else:&amp;#10;    problem = {&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (a_where == 1) {&amp;#10;    a_where = &quot;l&quot;&amp;#10;    problem = {&quot;A&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)}, &quot;B&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;    } else {&amp;#10;    a_where = &quot;r&quot;&amp;#10;    problem = {&quot;B&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)}, &quot;A&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p), &quot;v_se&quot;: b_side_effect_v,&amp;#10;    &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;        }" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="handle_prerand" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <PolygonComponent name="descr_med_a_box">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="descr_med_a_box" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.35, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.45, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="descr_med_b_box">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="descr_med_b_box" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.45, 0.25)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="descr_label_b">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="descr_label_b" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament B" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="descr_text_med_b">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="descr_text_med_b" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.65, .07)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Behandlungswahrscheinlichkeit:&quot; + &quot; &quot; + str(round(problem[&quot;B&quot;][&quot;p_b&quot;]*100,2)) + &quot;%\n\n&quot; + &quot;Nebenwirkung:\n&quot; + str(problem[&quot;B&quot;][&quot;v_se&quot;]) +&quot; &quot; + str(round(problem[&quot;B&quot;][&quot;p_se&quot;] * 100,2)) + &quot;%&quot;" valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="descr_label_a">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="descr_label_a" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament A" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="descr_text_med_a">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="code" updates="constant" name="letterHeight"/>
        <Param val="descr_text_med_a" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.05, .07)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Behandlungswahrscheinlichkeit:&quot; + &quot; &quot; + str(round(problem[&quot;A&quot;][&quot;p_b&quot;]*100,3)) + &quot;%\n\n&quot; + &quot;Nebenwirkung:\n&quot; + str(problem[&quot;A&quot;][&quot;v_se&quot;]) +&quot; &quot; + str(round(problem[&quot;A&quot;][&quot;p_se&quot;] * 100,3)) + &quot;%&quot; " valType="extendedStr" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="justify_text">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="descr_text_med_a.alignText = &quot;left&quot;&amp;#10;descr_text_med_b.alignText = &quot;left&quot;&amp;#10;#comment" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="descr_text_med_a.alignHoriz  = &quot;left&quot;;&amp;#10;descr_text_med_b.alignHoriz  = &quot;left&quot;;&amp;#10;//comment" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="justify_text" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ImageComponent name="descr_choose_a">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="descr_choose_a" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.35, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="descr_choose_b">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="descr_choose_b" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(.35, -.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="descr_answer_mouse">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="descr_answer_mouse" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="answer_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="has_been_clicked_A = false;&amp;#10;is_clicked = false;&amp;#10;has_been_clicked_B = false;&amp;#10;response_timer = new util.Clock();&amp;#10;response_timer.reset();&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;A_v_b&quot;, a_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_b&quot;, b_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;A_v_b_label&quot;, a_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_b_label&quot;, b_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;A_p_b&quot;, a_benefit_p);&amp;#10;psychoJS.experiment.addData(&quot;B_p_b&quot;, b_benefit_p);&amp;#10;psychoJS.experiment.addData(&quot;A_v_se&quot;, a_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_se&quot;, b_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;A_v_se_label&quot;, a_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_se_label&quot;, b_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;A_p_se&quot;, a_side_effect_p);&amp;#10;psychoJS.experiment.addData(&quot;B_p_se&quot;, b_side_effect_p);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="has_been_clicked_A = False&amp;#10;is_clicked = False&amp;#10;has_been_clicked_B = False&amp;#10;&amp;#10;&amp;#10;response_timer = core.Clock()&amp;#10;response_timer.reset()&amp;#10;&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_b&quot;, a_benefit_v)&amp;#10;thisExp.addData(&quot;B_v_b&quot;, b_benefit_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_b_label&quot;, a_benefit_v)&amp;#10;thisExp.addData(&quot;B_v_b_label&quot;, b_benefit_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_p_b&quot;, a_benefit_p)&amp;#10;thisExp.addData(&quot;B_p_b&quot;, b_benefit_p)&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_se&quot;, a_side_effect_v)&amp;#10;thisExp.addData(&quot;B_v_se&quot;, b_side_effect_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_se_label&quot;, a_side_effect_v)&amp;#10;thisExp.addData(&quot;B_v_se_label&quot;, b_side_effect_v)&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_p_se&quot;, a_side_effect_p)&amp;#10;thisExp.addData(&quot;B_p_se&quot;, b_side_effect_p)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if descr_answer_mouse.isPressedIn(descr_choose_a) and display_timer_desc.getTime() &gt; interval:&amp;#10;    descr_choose_a.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    has_been_clicked_A = True&amp;#10;else:&amp;#10;    descr_choose_a.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;    &amp;#10;&amp;#10;if descr_answer_mouse.isPressedIn(descr_choose_b) and display_timer_desc.getTime() &gt; interval:&amp;#10;    descr_choose_b.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    has_been_clicked_B = True&amp;#10;else:&amp;#10;    descr_choose_b.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;&amp;#10;if descr_answer_mouse.isPressedIn(descr_choose_b) or descr_answer_mouse.isPressedIn(descr_choose_a):&amp;#10;    is_clicked=True&amp;#10;else:&amp;#10;    is_clicked=False&amp;#10;&amp;#10;if has_been_clicked_A or has_been_clicked_B:&amp;#10;    if not is_clicked:&amp;#10;        continueRoutine=False&amp;#10;        rt_time = response_timer.getTime()&amp;#10;        if has_been_clicked_A:&amp;#10;            thisExp.addData(&quot;choice&quot;, &quot;left&quot;)&amp;#10;        elif has_been_clicked_B:&amp;#10;            thisExp.addData(&quot;choice&quot;, &quot;right&quot;)&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (descr_answer_mouse.isPressedIn(descr_choose_a) &amp;&amp; display_timer_desc.getTime() &gt; interval) {&amp;#10;    descr_choose_a.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    has_been_clicked_A = true;&amp;#10;} else {&amp;#10;    descr_choose_a.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;}&amp;#10;if (descr_answer_mouse.isPressedIn(descr_choose_b) &amp;&amp; display_timer_desc.getTime() &gt; interval) {&amp;#10;    descr_choose_b.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    has_been_clicked_B = true;&amp;#10;} else {&amp;#10;    descr_choose_b.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;}&amp;#10;if ((descr_answer_mouse.isPressedIn(descr_choose_b) || descr_answer_mouse.isPressedIn(descr_choose_a))) {&amp;#10;    is_clicked = true;&amp;#10;} else {&amp;#10;    is_clicked = false;&amp;#10;}&amp;#10;if ((has_been_clicked_A || has_been_clicked_B)) {&amp;#10;    if ((! is_clicked)) {&amp;#10;        continueRoutine = false;&amp;#10;        rt_time = response_timer.getTime();&amp;#10;        if (has_been_clicked_A) {&amp;#10;            psychoJS.experiment.addData(&quot;choice&quot;, &quot;left&quot;);&amp;#10;        } else {&amp;#10;            if (has_been_clicked_B) {&amp;#10;                psychoJS.experiment.addData(&quot;choice&quot;, &quot;right&quot;);&amp;#10;            }&amp;#10;        }&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;answer_time_descr&quot;, rt_time);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;answer_time_descr&quot;, rt_time)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="answer_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="label_treats">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="label_treats" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .31)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Behandelt: &quot; + a_benefit_v" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="display_later_log">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="display_timer_desc = new util.Clock();&amp;#10;display_timer_desc.reset();&amp;#10;descr_label_a.setAutoDraw(false);&amp;#10;descr_label_b.setAutoDraw(false);&amp;#10;descr_text_med_b.setAutoDraw(false);&amp;#10;descr_text_med_a.setAutoDraw(false);&amp;#10;descr_med_a_box.setAutoDraw(false);&amp;#10;descr_med_b_box.setAutoDraw(false);&amp;#10;descr_choose_a.setAutoDraw(false);&amp;#10;descr_choose_b.setAutoDraw(false);&amp;#10;interval = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="display_timer_desc = core.Clock()&amp;#10;display_timer_desc.reset()&amp;#10;&amp;#10;&amp;#10;&amp;#10;descr_label_a.setAutoDraw(False)&amp;#10;descr_label_b.setAutoDraw(False)&amp;#10;descr_text_med_b.setAutoDraw(False)&amp;#10;descr_text_med_a.setAutoDraw(False)&amp;#10;descr_med_a_box.setAutoDraw(False)&amp;#10;descr_med_b_box.setAutoDraw(False)&amp;#10;descr_choose_a.setAutoDraw(False)&amp;#10;descr_choose_b.setAutoDraw(False)&amp;#10;&amp;#10;interval = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;descr_label_a.setAutoDraw(False)&amp;#10;descr_label_b.setAutoDraw(False)&amp;#10;descr_text_med_b.setAutoDraw(False)&amp;#10;descr_text_med_a.setAutoDraw(False)&amp;#10;descr_med_a_box.setAutoDraw(False)&amp;#10;descr_med_b_box.setAutoDraw(False)&amp;#10;descr_choose_a.setAutoDraw(False)&amp;#10;descr_choose_b.setAutoDraw(False)&amp;#10;&amp;#10;if display_timer_desc.getTime() &gt; interval:&amp;#10;    descr_med_a_box.draw()&amp;#10;    descr_med_b_box.draw()&amp;#10;    descr_label_a.draw()&amp;#10;    descr_label_b.draw()&amp;#10;    descr_text_med_b.draw()&amp;#10;    descr_text_med_a.draw()&amp;#10;    descr_choose_a.draw()&amp;#10;    descr_choose_b.draw()" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="descr_label_a.setAutoDraw(false);&amp;#10;descr_label_b.setAutoDraw(false);&amp;#10;descr_text_med_b.setAutoDraw(false);&amp;#10;descr_text_med_a.setAutoDraw(false);&amp;#10;descr_med_a_box.setAutoDraw(false);&amp;#10;descr_med_b_box.setAutoDraw(false);&amp;#10;descr_choose_a.setAutoDraw(false);&amp;#10;descr_choose_b.setAutoDraw(false);&amp;#10;if ((display_timer_desc.getTime() &gt; interval)) {&amp;#10;    descr_label_a.draw();&amp;#10;    descr_label_b.draw();&amp;#10;    descr_text_med_b.draw();&amp;#10;    descr_text_med_a.draw();&amp;#10;    descr_med_a_box.draw();&amp;#10;    descr_med_b_box.draw();&amp;#10;    descr_choose_a.draw();&amp;#10;    descr_choose_b.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="display_later_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="sampling">
      <PolygonComponent name="exp_med_a_box">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="exp_med_a_box" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.45, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="exp_label_a">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_label_a" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament A" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <PolygonComponent name="exp_med_b_box">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="str" updates="constant" name="fillColor"/>
        <Param val="rgb" valType="str" updates="constant" name="fillColorSpace"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="str" updates="constant" name="lineColor"/>
        <Param val="rgb" valType="str" updates="constant" name="lineColorSpace"/>
        <Param val="2" valType="code" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="exp_med_b_box" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="constant" name="shape"/>
        <Param val="(0.45, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="exp_label_b">
        <Param val="black" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_label_b" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament B" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="exp_button_choose_A">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="exp_button_choose_A" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.35, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="exp_button_choose_B">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="str" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="None" valType="str" updates="constant" name="mask"/>
        <Param val="exp_button_choose_B" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="code" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <TextComponent name="exp_benefit_A">
        <Param val="green" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_benefit_A" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Erfolg: Kopfschmerzen" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_side_effect_A">
        <Param val="red" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_side_effect_A" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(-0.35, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Nebenwirkung: Fieber" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_benefit_B">
        <Param val="green" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_benefit_B" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Erfolg: Kopfschmerzen" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_side_effect_B">
        <Param val="red" valType="str" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="code" updates="constant" name="letterHeight"/>
        <Param val="exp_side_effect_B" valType="code" updates="None" name="name"/>
        <Param val="1" valType="code" updates="constant" name="opacity"/>
        <Param val="0" valType="code" updates="constant" name="ori"/>
        <Param val="(0.35, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Nebenwirkung: Übelkeit" valType="extendedStr" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="code" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <MouseComponent name="exp_click">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="exp_click" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="click_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import random&amp;#10;import json&amp;#10;import re&amp;#10;&amp;#10;&amp;#10;beep = sound.Sound('stim/mouse_move.wav', secs=0.00001, hamming=False)" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="is_clicked = false;&amp;#10;is_clicked_sample_A = false;&amp;#10;is_clicked_sample_B = false;&amp;#10;is_clicked_choose_A = false;&amp;#10;was_clicked_choose_A = false;&amp;#10;is_clicked_choose_B = false;&amp;#10;was_clicked_choose_B = false;&amp;#10;play_sound = false;&amp;#10;show_b = false;&amp;#10;show_a = false;&amp;#10;show_a_b = false;&amp;#10;show_a_se = false;&amp;#10;nothing_shown_a = false;&amp;#10;show_b_b = false;&amp;#10;show_b_se = false;&amp;#10;nothing_shown_b = false;&amp;#10;console.log(problem)&amp;#10;console.log(a_benefit_v)&amp;#10;console.log(a_side_effect_v)&amp;#10;console.log(a_benefit_p)&amp;#10;console.log(a_side_effect_p)&amp;#10;a_where = Math.round(Math.random())&amp;#10;if (a_where == 1) {&amp;#10;    a_where = &quot;l&quot;&amp;#10;    psychoJS.experiment.addData(&quot;a_shown&quot;, &quot;l&quot;)&amp;#10;    problem = {&quot;A&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)},&amp;#10;    &quot;B&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p), &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;    } else {&amp;#10;    a_where = &quot;r&quot;&amp;#10;    psychoJS.experiment.addData(&quot;a_shown&quot;, &quot;r&quot;)&amp;#10;    problem = {&quot;B&quot;: {&quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: Number.parseFloat(a_benefit_p), &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: Number.parseFloat(a_side_effect_p)}, &quot;A&quot;: {&quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: Number.parseFloat(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: Number.parseFloat(b_side_effect_p)}};&amp;#10;        }&amp;#10;&amp;#10;&amp;#10;exp_benefit_A.setAutoDraw(false);&amp;#10;exp_benefit_B.setAutoDraw(false);&amp;#10;exp_side_effect_A.setAutoDraw(false);&amp;#10;exp_side_effect_B.setAutoDraw(false);&amp;#10;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;A_v_b&quot;, a_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_b&quot;, b_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;A_v_b_label&quot;, a_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_b_label&quot;, b_benefit_v);&amp;#10;psychoJS.experiment.addData(&quot;A_p_b&quot;, a_benefit_p);&amp;#10;psychoJS.experiment.addData(&quot;B_p_b&quot;, b_benefit_p);&amp;#10;psychoJS.experiment.addData(&quot;A_v_se&quot;, a_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_se&quot;, b_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;A_v_se_label&quot;, a_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;B_v_se_label&quot;, b_side_effect_v);&amp;#10;psychoJS.experiment.addData(&quot;A_p_se&quot;, a_side_effect_p);&amp;#10;psychoJS.experiment.addData(&quot;B_p_se&quot;, b_side_effect_p);&amp;#10;exp_benefit_A.setText((&quot;Erfolg: &quot; + problem[&quot;A&quot;][&quot;v_b&quot;].toString()));&amp;#10;exp_benefit_B.setText((&quot;Erfolg: &quot; + problem[&quot;B&quot;][&quot;v_b&quot;].toString()));&amp;#10;exp_side_effect_A.setText((&quot;Nebenwirkung: &quot; + problem[&quot;A&quot;][&quot;v_se&quot;].toString()));&amp;#10;exp_side_effect_B.setText((&quot;Nebenwirkung: &quot; + problem[&quot;B&quot;][&quot;v_se&quot;].toString()));&amp;#10;clicks = [];&amp;#10;click_timer = new util.Clock();&amp;#10;beep = new sound.Sound({&amp;#10;  win: psychoJS.window,&amp;#10;  value: &quot;stim/mouse_move.wav&quot;,&amp;#10;  secs: 0.00001});&amp;#10;  &amp;#10;  &amp;#10;last_click = 0&amp;#10;cooldown = .5&amp;#10;click_timer.reset()" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="is_clicked= False&amp;#10;is_clicked_sample_A = False&amp;#10;is_clicked_sample_B = False&amp;#10;is_clicked_choose_A = False&amp;#10;was_clicked_choose_A = False&amp;#10;is_clicked_choose_B = False&amp;#10;was_clicked_choose_B = False&amp;#10;play_sound = False&amp;#10;show_a_b = False&amp;#10;show_a_se = False&amp;#10;nothing_shown_a = False&amp;#10;show_b_b = False&amp;#10;show_b_se = False&amp;#10;nothing_shown_b = False&amp;#10;&amp;#10;a_where = random.choice([&quot;l&quot;, &quot;r&quot;])&amp;#10;thisExp.addData(&quot;a_shown&quot;, a_where)&amp;#10;&amp;#10;if a_where == &quot;l&quot;:&amp;#10;    problem = {&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }&amp;#10;else:&amp;#10;    problem = {&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: a_benefit_v, &quot;p_b&quot;: float(a_benefit_p),&amp;#10;    &quot;v_se&quot;: a_side_effect_v, &quot;p_se&quot;: float(a_side_effect_p)&amp;#10;    },&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: b_benefit_v, &quot;p_b&quot;: float(b_benefit_p),&amp;#10;    &quot;v_se&quot;: b_side_effect_v, &quot;p_se&quot;: float(b_side_effect_p)&amp;#10;    }&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_b&quot;, a_benefit_v)&amp;#10;thisExp.addData(&quot;B_v_b&quot;, b_benefit_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_b_label&quot;, a_benefit_v)&amp;#10;thisExp.addData(&quot;B_v_b_label&quot;, b_benefit_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_p_b&quot;, a_benefit_p)&amp;#10;thisExp.addData(&quot;B_p_b&quot;, b_benefit_p)&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_se&quot;, a_side_effect_v)&amp;#10;thisExp.addData(&quot;B_v_se&quot;, b_side_effect_v)&amp;#10;&amp;#10;thisExp.addData(&quot;A_v_se_label&quot;, a_side_effect_v)&amp;#10;thisExp.addData(&quot;B_v_se_label&quot;, b_side_effect_v)&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;A_p_se&quot;, a_side_effect_p)&amp;#10;thisExp.addData(&quot;B_p_se&quot;, b_side_effect_p)&amp;#10;&amp;#10;show_b = False&amp;#10;show_a = False&amp;#10;&amp;#10;exp_benefit_A.setText(&quot;Erfolg: &quot; + str(problem[&quot;A&quot;][&quot;v_b&quot;]))&amp;#10;exp_benefit_B.setText(&quot;Erfolg: &quot; + str(problem[&quot;B&quot;][&quot;v_b&quot;]))&amp;#10;exp_side_effect_A.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;A&quot;][&quot;v_se&quot;]))&amp;#10;exp_side_effect_B.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;B&quot;][&quot;v_se&quot;]))&amp;#10;&amp;#10;clicks = []&amp;#10;click_timer = core.Clock()&amp;#10;&amp;#10;&amp;#10;last_click = 0&amp;#10;cooldown = .5&amp;#10;&amp;#10;&amp;#10;&amp;#10;exp_benefit_A.setAutoDraw(False)&amp;#10;exp_benefit_B.setAutoDraw(False)&amp;#10;exp_side_effect_A.setAutoDraw(False)&amp;#10;exp_side_effect_B.setAutoDraw(False)&amp;#10;" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="exp_benefit_A.setAutoDraw(False)&amp;#10;exp_benefit_B.setAutoDraw(False)&amp;#10;exp_side_effect_A.setAutoDraw(False)&amp;#10;exp_side_effect_B.setAutoDraw(False)&amp;#10;&amp;#10;&amp;#10;&amp;#10;if exp_click.isPressedIn(exp_med_a_box) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_med_a_box.fillColor=&quot;grey&quot;&amp;#10;    is_clicked_sample_A = True&amp;#10;    is_clicked = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_med_a_box.fillColor=&quot;white&quot;&amp;#10;    is_clicked = False&amp;#10;&amp;#10;&amp;#10;if exp_click.isPressedIn(exp_med_b_box) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_med_b_box.fillColor=&quot;grey&quot;&amp;#10;    is_clicked_sample_B = True&amp;#10;    is_clicked = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_med_b_box.fillColor=&quot;white&quot;&amp;#10;    is_clicked = False&amp;#10;&amp;#10;&amp;#10;if exp_click.isPressedIn(exp_button_choose_A) and click_timer.getTime() &gt; last_click + cooldown and start_draw_clock.getTime() &gt; interval_to_start_drawing:&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    is_clicked = True&amp;#10;    is_clicked_choose_A = True&amp;#10;    was_clicked_choose_A =  True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;    is_clicked = False&amp;#10;    is_clicked_choose_A= False&amp;#10;&amp;#10;if exp_click.isPressedIn(exp_button_choose_B) and click_timer.getTime() &gt; last_click + cooldown and start_draw_clock.getTime() &gt; interval_to_start_drawing:&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    is_clicked = True&amp;#10;    is_clicked_choose_B = True&amp;#10;    was_clicked_choose_B = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;    is_clicked = False&amp;#10;    is_clicked_choose_B = False&amp;#10; &amp;#10;&amp;#10;&amp;#10;# handle_sampling A&amp;#10;if is_clicked_sample_A and not is_clicked and not exp_click.isPressedIn(exp_med_a_box):&amp;#10;    show_a_b = random.random() &lt; problem[&quot;A&quot;][&quot;p_b&quot;]&amp;#10;    show_a_se = random.random() &lt; problem[&quot;A&quot;][&quot;p_se&quot;]&amp;#10;    &amp;#10;    if not show_a_b:&amp;#10;        exp_benefit_A.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_A.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_benefit_A.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_A.color = &quot;green&quot;&amp;#10;    &amp;#10;&amp;#10;&amp;#10;    if not show_a_se:&amp;#10;        exp_side_effect_A.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_A.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_side_effect_A.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;A&quot;][&quot;v_se&quot;]))&amp;#10;        exp_side_effect_A.color = &quot;red&quot;&amp;#10;    &amp;#10;    show_b = False&amp;#10;    show_a = True&amp;#10;    show_b_b = False&amp;#10;    show_b_se = False&amp;#10;    nothing_shown_b = False&amp;#10;    is_clicked_sample_A = False&amp;#10;    restart_anim = True&amp;#10;    is_anim = True&amp;#10;    play_sound = True&amp;#10;    clicks.append({&quot;which&quot;: &quot;left&quot;, &quot;time&quot;: click_timer.getTime(),&amp;#10;    &quot;se_shown&quot;: show_a_se, &quot;b_shown&quot;: show_a_b})&amp;#10;&amp;#10;&amp;#10;# handle_sampling B&amp;#10;if is_clicked_sample_B and not is_clicked and not exp_click.isPressedIn(exp_med_b_box):&amp;#10;    show_b_b = random.random() &lt; problem[&quot;B&quot;][&quot;p_b&quot;]&amp;#10;    show_b_se = random.random() &lt; problem[&quot;B&quot;][&quot;p_se&quot;]&amp;#10;    &amp;#10;    &amp;#10;    if not show_b_b:&amp;#10;        exp_benefit_B.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_B.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_benefit_B.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_B.color = &quot;green&quot;&amp;#10;&amp;#10;    if not show_b_se:&amp;#10;        exp_side_effect_B.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_B.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_side_effect_B.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;B&quot;][&quot;v_se&quot;]))&amp;#10;        exp_side_effect_B.color = &quot;red&quot;&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;    show_b = True&amp;#10;    show_a = False&amp;#10;    show_a_b = False&amp;#10;    show_a_se = False&amp;#10;    nothing_shown_a = False&amp;#10;    is_clicked_sample_B = False&amp;#10;    restart_anim = True&amp;#10;    is_anim = True&amp;#10;    play_sound = True&amp;#10;    clicks.append({&quot;which&quot;: &quot;right&quot;, &quot;time&quot;: click_timer.getTime(),&amp;#10;    &quot;se_shown&quot;: show_b_se, &quot;b_shown&quot;: show_b_b})&amp;#10;&amp;#10;&amp;#10;if play_sound:&amp;#10;    beep.play()&amp;#10;    play_sound = False&amp;#10;    &amp;#10;if show_a:&amp;#10;    exp_benefit_A.draw()&amp;#10;    exp_side_effect_A.draw()&amp;#10;&amp;#10;if show_b:&amp;#10;    exp_benefit_B.draw()&amp;#10;    exp_side_effect_B.draw()&amp;#10;&amp;#10;&amp;#10;    &amp;#10;    &amp;#10;if was_clicked_choose_A and not is_clicked_choose_A and not is_clicked:&amp;#10;    continueRoutine=False&amp;#10;    thisExp.addData(&quot;chosen_exp&quot;, &quot;left&quot;)&amp;#10;&amp;#10;if was_clicked_choose_B and not is_clicked_choose_B and not is_clicked:&amp;#10;    continueRoutine=False&amp;#10;    thisExp.addData(&quot;chosen_exp&quot;, &quot;right&quot;)&amp;#10;    &amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="exp_benefit_A.setAutoDraw(false);&amp;#10;exp_benefit_B.setAutoDraw(false);&amp;#10;exp_side_effect_A.setAutoDraw(false);&amp;#10;exp_side_effect_B.setAutoDraw(false);&amp;#10;&amp;#10;if (exp_click.isPressedIn(exp_med_a_box) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_med_a_box.fillColor = &quot;grey&quot;;&amp;#10;    is_clicked_sample_A = true;&amp;#10;    is_clicked = true;&amp;#10;} else {&amp;#10;    exp_med_a_box.fillColor = &quot;white&quot;;&amp;#10;    is_clicked = false;&amp;#10;}&amp;#10;if (exp_click.isPressedIn(exp_med_b_box) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_med_b_box.fillColor = &quot;grey&quot;;&amp;#10;    is_clicked_sample_B = true;&amp;#10;    is_clicked = true;&amp;#10;} else {&amp;#10;    exp_med_b_box.fillColor = &quot;white&quot;;&amp;#10;    is_clicked = false;&amp;#10;}&amp;#10;if (exp_click.isPressedIn(exp_button_choose_A) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown &amp;&amp; start_draw_clock.getTime() &gt; interval_to_start_drawing) {&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    is_clicked = true;&amp;#10;    is_clicked_choose_A = true;&amp;#10;    was_clicked_choose_A = true;&amp;#10;} else {&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;    is_clicked = false;&amp;#10;    is_clicked_choose_A = false;&amp;#10;}&amp;#10;if (exp_click.isPressedIn(exp_button_choose_B) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown &amp;&amp; start_draw_clock.getTime() &gt; interval_to_start_drawing) {&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    is_clicked = true;&amp;#10;    is_clicked_choose_B = true;&amp;#10;    was_clicked_choose_B = true;&amp;#10;} else {&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;    is_clicked = false;&amp;#10;    is_clicked_choose_B = false;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;if (exp_click.isPressedIn(exp_med_a_box) || exp_click.isPressedIn(exp_med_b_box) || exp_click.isPressedIn(exp_button_choose_A) || exp_click.isPressedIn(exp_button_choose_B) ) {&amp;#10;    &amp;#10;    is_clicked = true&amp;#10;    } else {&amp;#10;        is_clicked = false&amp;#10;        }&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (((is_clicked_sample_A &amp;&amp; (! is_clicked)) &amp;&amp; (! exp_click.isPressedIn(exp_med_a_box)))) {&amp;#10;    show_a_b = (Math.random() &lt; problem[&quot;A&quot;][&quot;p_b&quot;]);&amp;#10;    show_a_se = (Math.random() &lt; problem[&quot;A&quot;][&quot;p_se&quot;]);&amp;#10;    last_click = click_timer.getTime()&amp;#10;&amp;#10;    if (!show_a_b) {&amp;#10;        &amp;#10;        exp_benefit_A.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_A.color = &quot;black&quot;&amp;#10;        &amp;#10;         } else {&amp;#10;            &amp;#10;        exp_benefit_A.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_A.color = &quot;green&quot;&amp;#10;        &amp;#10;            }&amp;#10;    &amp;#10;    if (!show_a_se) {&amp;#10;        exp_side_effect_A.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_A.color = &quot;black&quot;&amp;#10;        } else {&amp;#10;        exp_side_effect_A.setText((&quot;Nebenwirkung: &quot; + problem[&quot;A&quot;][&quot;v_se&quot;].toString()))&amp;#10;        exp_side_effect_A.color = &quot;red&quot;            &amp;#10;            }&amp;#10;    &amp;#10;    show_b = false&amp;#10;    show_a = true&amp;#10;    show_b_b = false;&amp;#10;    show_b_se = false;&amp;#10;    nothing_shown_b = false;&amp;#10;    is_clicked_sample_A = false;&amp;#10;    restart_anim = true;&amp;#10;    is_anim = true;&amp;#10;    play_sound = true;&amp;#10;    clicks.push({&quot;which&quot;: &quot;left&quot;, &quot;time&quot;: click_timer.getTime(), &quot;se_shown&quot;: show_a_se, &quot;b_shown&quot;: show_a_b});&amp;#10;}&amp;#10;if (((is_clicked_sample_B &amp;&amp; (! is_clicked)) &amp;&amp; (! exp_click.isPressedIn(exp_med_b_box)))) {&amp;#10;    show_b_b = (Math.random() &lt; problem[&quot;B&quot;][&quot;p_b&quot;]);&amp;#10;    show_b_se = (Math.random() &lt; problem[&quot;B&quot;][&quot;p_se&quot;]);&amp;#10;&amp;#10;&amp;#10;&amp;#10;    last_click = click_timer.getTime()&amp;#10;&amp;#10;&amp;#10;&amp;#10;    if (!show_b_b) {&amp;#10;        &amp;#10;        exp_benefit_B.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_B.color = &quot;black&quot;&amp;#10;        &amp;#10;         } else {&amp;#10;            &amp;#10;        exp_benefit_B.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_B.color = &quot;green&quot;&amp;#10;        &amp;#10;            }&amp;#10;    &amp;#10;    if (!show_b_se) {&amp;#10;        exp_side_effect_B.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_B.color = &quot;black&quot;&amp;#10;        } else {&amp;#10;        exp_side_effect_B.setText((&quot;Nebenwirkung: &quot; + problem[&quot;B&quot;][&quot;v_se&quot;].toString()))&amp;#10;        exp_side_effect_B.color = &quot;red&quot;            &amp;#10;            }&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;    show_b = true&amp;#10;    show_a = false&amp;#10;    show_a_b = false;&amp;#10;    show_a_se = false;&amp;#10;    nothing_shown_a = false;&amp;#10;    is_clicked_sample_B = false;&amp;#10;    restart_anim = true;&amp;#10;    is_anim = true;&amp;#10;    play_sound = true;&amp;#10;    clicks.push({&quot;which&quot;: &quot;right&quot;, &quot;time&quot;: click_timer.getTime(), &quot;se_shown&quot;: show_b_se, &quot;b_shown&quot;: show_b_b});&amp;#10;}&amp;#10;if (play_sound) {&amp;#10;    beep.play(0);&amp;#10;    play_sound = false;&amp;#10;}&amp;#10;if (show_a) {&amp;#10;    exp_benefit_A.draw();&amp;#10;    exp_side_effect_A.draw();&amp;#10;}&amp;#10;&amp;#10;if (show_b) {&amp;#10;    exp_benefit_B.draw();&amp;#10;    exp_side_effect_B.draw();&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (((was_clicked_choose_A &amp;&amp; (! is_clicked_choose_A)) &amp;&amp; (! is_clicked))) {&amp;#10;    continueRoutine = false;&amp;#10;    psychoJS.experiment.addData(&quot;chosen_exp&quot;, &quot;left&quot;);&amp;#10;}&amp;#10;if (((was_clicked_choose_B &amp;&amp; (! is_clicked_choose_B)) &amp;&amp; (! is_clicked))) {&amp;#10;    continueRoutine = false;&amp;#10;    psychoJS.experiment.addData(&quot;chosen_exp&quot;, &quot;right&quot;);&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="clicks = JSON.stringify(clicks)&amp;#10;clicks = clicks.replace(/[&quot;]/g, &quot;'&quot;)&amp;#10;psychoJS.experiment.addData(&quot;sampling_history&quot;, clicks);&amp;#10;click_timer.reset()" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="clicks = json.dumps(clicks)&amp;#10;clicks = re.sub('&quot;', &quot;'&quot;, clicks)&amp;#10;thisExp.addData(&quot;sampling_history&quot;, clicks)&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="click_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="anim">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="is_anim = false;&amp;#10;restart_anim = false;&amp;#10;opacity_min_max = [0, 1];&amp;#10;opacity_step_size = 3;&amp;#10;pos_step_size = 2;&amp;#10;benefit_pos_min_max = [0.15, 0.2];&amp;#10;side_effect_pos_min_max = [0.1, 0.15];&amp;#10;a_b_mm = [(- 0.35), benefit_pos_min_max[0]];&amp;#10;b_b_mm = [0.35, benefit_pos_min_max[0]];&amp;#10;a_se_mm = [(- 0.35), side_effect_pos_min_max[0]];&amp;#10;b_se_mm = [0.35, side_effect_pos_min_max[0]];&amp;#10;anim_clock = new util.Clock();&amp;#10;last_time = 0;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="is_anim = False&amp;#10;restart_anim = False&amp;#10;&amp;#10;opacity_min_max = [0, 1]&amp;#10;opacity_step_size = 3&amp;#10;&amp;#10;pos_step_size = 2&amp;#10;benefit_pos_min_max = [.15, .2]&amp;#10;side_effect_pos_min_max = [.10, .15]&amp;#10;&amp;#10;a_b_mm = [-0.35, benefit_pos_min_max[0]]&amp;#10;b_b_mm = [0.35, benefit_pos_min_max[0]]&amp;#10;a_se_mm = [-0.35, side_effect_pos_min_max[0]]&amp;#10;b_se_mm = [0.35, side_effect_pos_min_max[0]]&amp;#10;&amp;#10;&amp;#10;anim_clock = core.Clock()&amp;#10;&amp;#10;&amp;#10;last_time = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if restart_anim:&amp;#10;    exp_benefit_A.setPos((-0.35, .15))&amp;#10;    exp_benefit_B.pos = (0.35, .15)&amp;#10;    exp_side_effect_A.pos = (-0.35, 0.1)&amp;#10;    exp_side_effect_B.pos = (0.35, 0.1)&amp;#10;    restart_anim = False&amp;#10;    exp_benefit_A.setOpacity(.2)&amp;#10;    exp_benefit_B.setOpacity(.2)&amp;#10;    exp_side_effect_A.setOpacity(.2)&amp;#10;    exp_side_effect_B.setOpacity(.2)&amp;#10;    last_time = 0&amp;#10;    anim_clock.reset()&amp;#10;&amp;#10;&amp;#10;if not restart_anim:&amp;#10;    current_b_a = exp_benefit_A.pos&amp;#10;    current_b_b = exp_benefit_B.pos&amp;#10;    current_se_a = exp_side_effect_A.pos&amp;#10;    current_se_b = exp_side_effect_B.pos&amp;#10;&amp;#10;    now_time = anim_clock.getTime()&amp;#10;    time_delta = now_time - last_time&amp;#10;    last_time = now_time&amp;#10;&amp;#10;    exp_benefit_A.pos = [-0.35, current_b_a[1] + pos_step_size * time_delta]&amp;#10;    exp_benefit_B.pos = [0.35, current_b_b[1] + pos_step_size * time_delta]&amp;#10;    exp_side_effect_A.pos = [-0.35, current_se_a[1] + pos_step_size * time_delta]&amp;#10;    exp_side_effect_B.pos = [0.35, current_se_b[1] + pos_step_size * time_delta]&amp;#10;    &amp;#10;    op = exp_benefit_A.opacity&amp;#10;    if op &gt; 1: op = 1;&amp;#10;    exp_benefit_A.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_benefit_B.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_side_effect_A.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_side_effect_B.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    &amp;#10;    &amp;#10;    if exp_benefit_A.pos[1] &gt; .2:&amp;#10;        exp_benefit_A.pos = [-0.35, .2]&amp;#10;    if exp_benefit_B.pos[1] &gt; .2:&amp;#10;        exp_benefit_B.pos = [0.35, .2]&amp;#10;    if exp_side_effect_A.pos[1] &gt; .15:&amp;#10;        exp_side_effect_A.pos = [-0.35, .15]&amp;#10;    if exp_side_effect_B.pos[1] &gt; .15:&amp;#10;        exp_side_effect_B.pos = [0.35, .15]&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (restart_anim) {&amp;#10;    exp_benefit_A.setPos([(- 0.35), 0.15]);&amp;#10;    exp_benefit_B.pos = [0.35, 0.15];&amp;#10;    exp_side_effect_A.pos = [(- 0.35), 0.1];&amp;#10;    exp_side_effect_B.pos = [0.35, 0.1];&amp;#10;    restart_anim = false;&amp;#10;    exp_benefit_A.setOpacity(0.2);&amp;#10;    exp_benefit_B.setOpacity(0.2);&amp;#10;    exp_side_effect_A.setOpacity(0.2);&amp;#10;    exp_side_effect_B.setOpacity(0.2);&amp;#10;    last_time = 0;&amp;#10;    anim_clock.reset();&amp;#10;}&amp;#10;if ((! restart_anim)) {&amp;#10;    current_b_a = exp_benefit_A.pos;&amp;#10;    current_b_b = exp_benefit_B.pos;&amp;#10;    current_se_a = exp_side_effect_A.pos;&amp;#10;    current_se_b = exp_side_effect_B.pos;&amp;#10;    now_time = anim_clock.getTime();&amp;#10;    time_delta = (now_time - last_time);&amp;#10;    last_time = now_time;&amp;#10;    exp_benefit_A.pos = [(- 0.35), (current_b_a[1] + (pos_step_size * time_delta))];&amp;#10;    exp_benefit_B.pos = [0.35, (current_b_b[1] + (pos_step_size * time_delta))];&amp;#10;    exp_side_effect_A.pos = [(- 0.35), (current_se_a[1] + (pos_step_size * time_delta))];&amp;#10;    exp_side_effect_B.pos = [0.35, (current_se_b[1] + (pos_step_size * time_delta))];&amp;#10;    op = exp_benefit_A.opacity;&amp;#10;    if ((op &gt; 1)) {&amp;#10;        op = 1;&amp;#10;    }&amp;#10;    exp_benefit_A.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_benefit_B.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_side_effect_A.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_side_effect_B.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    if ((exp_benefit_A.pos[1] &gt; 0.2)) {&amp;#10;        exp_benefit_A.pos = [(- 0.35), 0.2];&amp;#10;    }&amp;#10;    if ((exp_benefit_B.pos[1] &gt; 0.2)) {&amp;#10;        exp_benefit_B.pos = [0.35, 0.2];&amp;#10;    }&amp;#10;    if ((exp_side_effect_A.pos[1] &gt; 0.15)) {&amp;#10;        exp_side_effect_A.pos = [(- 0.35), 0.15];&amp;#10;    }&amp;#10;    if ((exp_side_effect_B.pos[1] &gt; 0.15)) {&amp;#10;        exp_side_effect_B.pos = [0.35, 0.15];&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="anim" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="label_what_treat">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="label_what_treat" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .31)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Behandelt: &quot; + a_benefit_v" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="skip_helper">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine=False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_helper" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="show_label_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;exp_med_a_box.setAutoDraw(false);&amp;#10;exp_med_b_box.setAutoDraw(false);&amp;#10;exp_label_a.setAutoDraw(false);&amp;#10;exp_label_b.setAutoDraw(false);&amp;#10;exp_button_choose_A.setAutoDraw(false);&amp;#10;exp_button_choose_B.setAutoDraw(false);&amp;#10;start_draw_clock = new util.Clock();&amp;#10;interval_to_start_drawing = 1;&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="exp_med_a_box.setAutoDraw(False)&amp;#10;exp_med_b_box.setAutoDraw(False)&amp;#10;exp_label_a.setAutoDraw(False)&amp;#10;exp_label_b.setAutoDraw(False)&amp;#10;exp_button_choose_A.setAutoDraw(False)&amp;#10;exp_button_choose_B.setAutoDraw(False)&amp;#10;&amp;#10;&amp;#10;start_draw_clock = core.Clock()&amp;#10;start_draw_clock.reset()&amp;#10;interval_to_start_drawing = 1" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="exp_med_a_box.setAutoDraw(False)&amp;#10;exp_med_b_box.setAutoDraw(False)&amp;#10;exp_label_a.setAutoDraw(False)&amp;#10;exp_label_b.setAutoDraw(False)&amp;#10;exp_button_choose_A.setAutoDraw(False)&amp;#10;exp_button_choose_B.setAutoDraw(False)&amp;#10;&amp;#10;&amp;#10;if start_draw_clock.getTime() &gt; interval_to_start_drawing:&amp;#10;    exp_med_a_box.draw()&amp;#10;    exp_med_b_box.draw()&amp;#10;    exp_label_a.draw()&amp;#10;    exp_label_b.draw()&amp;#10;    exp_button_choose_A.draw()&amp;#10;    exp_button_choose_B.draw()&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="&amp;#10;exp_med_a_box.setAutoDraw(false);&amp;#10;exp_med_b_box.setAutoDraw(false);&amp;#10;exp_label_a.setAutoDraw(false);&amp;#10;exp_label_b.setAutoDraw(false);&amp;#10;exp_button_choose_A.setAutoDraw(false);&amp;#10;exp_button_choose_B.setAutoDraw(false);&amp;#10;if ((start_draw_clock.getTime() &gt; interval_to_start_drawing)) {&amp;#10;    exp_med_a_box.draw();&amp;#10;    exp_med_b_box.draw();&amp;#10;    exp_label_a.draw();&amp;#10;    exp_label_b.draw();&amp;#10;    exp_button_choose_A.draw();&amp;#10;    exp_button_choose_B.draw();&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="show_label_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fix">
      <TextComponent name="fix_cross">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="fix_cross" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="0.35" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="+" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
    </Routine>
    <Routine name="rate_side_effects">
      <TextComponent name="side_effect">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="side_effect" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$side_effect_text" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="prompt">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="prompt" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Wie belastend wäre es für Sie, an folgender Nebenwirkung zu leiden:" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="rating_side_effect">
        <Param val="black" valType="color" updates="constant" name="borderColor"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="[&quot;gar nicht belastend&quot;, &quot;sehr belastend&quot;]" valType="list" updates="constant" name="labels"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rating_side_effect" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.06)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <TextComponent name="hint_contin">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="hint_contin" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="weiter mit Leertaste" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_se_rating">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_se_rating" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="logic_answer_se_rating">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="all_side_effects = []" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="all_side_effects = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if continueRoutine == False and not rating_side_effect.getRating():&amp;#10;    continueRoutine = True&amp;#10;    contin_se_rating.clearEvents(eventType='keyboard')&amp;#10;    theseKeys = []&amp;#10;    _contin_se_rating_allKeys = []&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((continueRoutine === false) &amp;&amp; (! rating_side_effect.getRating()))) {&amp;#10;    continueRoutine = true;&amp;#10;    contin_se_rating.clearEvents({&quot;eventType&quot;: &quot;keyboard&quot;});&amp;#10;    theseKeys = [];&amp;#10;    _contin_se_rating_allKeys = [];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="all_side_effects.push({&quot;se&quot;: side_effect_text, &quot;rating&quot;: rating_side_effect.getRating()});&amp;#10;psychoJS.experiment.addData(&quot;se&quot;, side_effect_text);&amp;#10;psychoJS.experiment.addData(&quot;rating_se&quot;, rating_side_effect.getRating());&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="all_side_effects.append(&amp;#10;{&quot;se&quot;: side_effect_text, &quot;rating&quot;: rating_side_effect.getRating()})&amp;#10;&amp;#10;thisExp.addData(&quot;se&quot;, side_effect_text)&amp;#10;thisExp.addData(&quot;rating_se&quot;, rating_side_effect.getRating())&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="logic_answer_se_rating" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="rate_illness">
      <TextComponent name="pain_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="pain_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$combined_symptom" valType="str" updates="set every repeat" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="prompt_pain">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="prompt_pain" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Wie belastend wäre es für Sie, an folgendem Schmerz zu leiden:&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <SliderComponent name="rating_pain">
        <Param val="black" valType="color" updates="constant" name="borderColor"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="Red" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="1" valType="num" updates="constant" name="granularity"/>
        <Param val="" valType="code" updates="None" name="initVal"/>
        <Param val="[&quot;gar nicht belastend&quot;, &quot;sehr belastend&quot;]" valType="list" updates="constant" name="labels"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="rating_pain" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="constant" name="readOnly"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(1.0, 0.06)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="condition" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="constant" name="storeHistory"/>
        <Param val="True" valType="bool" updates="constant" name="storeRating"/>
        <Param val="True" valType="bool" updates="constant" name="storeRatingTime"/>
        <Param val="()" valType="list" updates="constant" name="styleTweaks"/>
        <Param val="rating" valType="str" updates="constant" name="styles"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="(1, 2, 3, 4, 5, 6, 7, 8, 9, 10)" valType="list" updates="constant" name="ticks"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </SliderComponent>
      <TextComponent name="hint_contin_pain">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="hint_contin_pain" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.3)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="weiter mit Leertaste" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_pain_rating">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_pain_rating" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="last key" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="pain_rating_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="rated_pains = []" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="rated_pains = [];&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="rated_pains.push({&quot;pain&quot;: combined_symptom, &quot;rating&quot;: rating_pain.getRating()});&amp;#10;psychoJS.experiment.addData(&quot;pain&quot;, combined_symptom);&amp;#10;psychoJS.experiment.addData(&quot;rating_pain&quot;, combined_symptom);&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="rated_pains.append(&amp;#10;{&quot;pain&quot;: combined_symptom, &quot;rating&quot;: rating_pain.getRating()}&amp;#10;)&amp;#10;&amp;#10;&amp;#10;thisExp.addData(&quot;pain&quot;, combined_symptom)&amp;#10;thisExp.addData(&quot;rating_pain&quot;, combined_symptom)&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="pain_rating_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="logic_rating">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="&amp;#10;&amp;#10;if continueRoutine == False and not rating_pain.getRating():&amp;#10;    continueRoutine = True&amp;#10;    contin_pain_rating.clearEvents(eventType='keyboard')&amp;#10;    theseKeys = []&amp;#10;    _contin_pain_rating_allKeys = []&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (((continueRoutine === false) &amp;&amp; (! rating_pain.getRating()))) {&amp;#10;    continueRoutine = true;&amp;#10;    contin_pain_rating.clearEvents({&quot;eventType&quot;: &quot;keyboard&quot;});&amp;#10;    theseKeys = [];&amp;#10;    _contin_pain_rating_allKeys = [];&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="logic_rating" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="prep">
      <CodeComponent name="prep_random_order">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="&amp;#10;starts_with = Math.random() &lt; 0.5 ? &quot;desc&quot; : &quot;exp&quot;;&amp;#10;&amp;#10;psychoJS.experiment.addData(&quot;starts_with&quot;, starts_with);&amp;#10;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="import random&amp;#10;starts_with = random.choice([&quot;exp&quot;, &quot;desc&quot;])&amp;#10;&amp;#10;thisExp.addData(&quot;starts_with&quot;, starts_with)&amp;#10;propagate = False&amp;#10;print(starts_with)" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="prep_random_order" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip1">
      <CodeComponent name="skip1_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    sample_trial_loop.finished=True&amp;#10;    continueRoutine= False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    sample_trial_loop.finished = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip1_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip2">
      <CodeComponent name="skip2_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False&amp;#10;    sample_trial_loop_2.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;    sample_trial_loop_2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip2_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="fix_2"/>
    <Routine name="fix2"/>
    <Routine name="interactive_sampl_1">
      <PolygonComponent name="exp_med_a_box_demo">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="exp_med_a_box_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.45, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <PolygonComponent name="exp_med_b_box_demo">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="$[1.000,1.000,1.000]" valType="color" updates="constant" name="fillColor"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="$[-1.000,-1.000,-1.000]" valType="color" updates="constant" name="lineColor"/>
        <Param val="2" valType="num" updates="constant" name="lineWidth"/>
        <Param val="4" valType="int" updates="constant" name="nVertices"/>
        <Param val="exp_med_b_box_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="rectangle" valType="str" updates="None" name="shape"/>
        <Param val="(0.45, 0.15)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="list" updates="constant" name="vertices"/>
      </PolygonComponent>
      <TextComponent name="exp_label_a_demo">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_label_a_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament A" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_label_b_demo">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_label_b_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Medikament B" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_benefit_A_demo">
        <Param val="green" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_benefit_A_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Erfolg: Kopfschmerzen" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_benefit_B_demo">
        <Param val="green" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_benefit_B_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.2)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Erfolg: Kopfschmerzen" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_side_effect_A_demo">
        <Param val="red" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_side_effect_A_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Nebenwirkung: Fieber" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="exp_side_effect_B_demo">
        <Param val="red" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.03" valType="num" updates="constant" name="letterHeight"/>
        <Param val="exp_side_effect_B_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, 0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Nebenwirkung: Übelkeit" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <ImageComponent name="exp_button_choose_A_demo">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="exp_button_choose_A_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(-0.35, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <ImageComponent name="exp_button_choose_B_demo">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="stim/button_choose.png" valType="file" updates="constant" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="exp_button_choose_B_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0.35, -0.15)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <MouseComponent name="exp_click_demo">
        <Param val="" valType="list" updates="constant" name="clickable"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="never" valType="str" updates="constant" name="forceEndRoutineOnPress"/>
        <Param val="exp_click_demo" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="constant" name="newClicksOnly"/>
        <Param val="never" valType="str" updates="None" name="saveMouseState"/>
        <Param val="name," valType="list" updates="constant" name="saveParamsClickable"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="False" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="mouse onset" valType="str" updates="constant" name="timeRelativeTo"/>
      </MouseComponent>
      <CodeComponent name="anim_demo">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="is_anim = false;&amp;#10;restart_anim = false;&amp;#10;opacity_min_max = [0, 1];&amp;#10;opacity_step_size = 3;&amp;#10;pos_step_size = 2;&amp;#10;benefit_pos_min_max = [0.15, 0.2];&amp;#10;side_effect_pos_min_max = [0.1, 0.15];&amp;#10;a_b_mm = [(- 0.35), benefit_pos_min_max[0]];&amp;#10;b_b_mm = [0.35, benefit_pos_min_max[0]];&amp;#10;a_se_mm = [(- 0.35), side_effect_pos_min_max[0]];&amp;#10;b_se_mm = [0.35, side_effect_pos_min_max[0]];&amp;#10;anim_clock = new util.Clock();&amp;#10;last_time = 0;" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="is_anim = False&amp;#10;restart_anim = False&amp;#10;&amp;#10;opacity_min_max = [0, 1]&amp;#10;opacity_step_size = 3&amp;#10;&amp;#10;pos_step_size = 2&amp;#10;benefit_pos_min_max = [.15, .2]&amp;#10;side_effect_pos_min_max = [.10, .15]&amp;#10;&amp;#10;a_b_mm = [-0.35, benefit_pos_min_max[0]]&amp;#10;b_b_mm = [0.35, benefit_pos_min_max[0]]&amp;#10;a_se_mm = [-0.35, side_effect_pos_min_max[0]]&amp;#10;b_se_mm = [0.35, side_effect_pos_min_max[0]]&amp;#10;&amp;#10;&amp;#10;anim_clock = core.Clock()&amp;#10;&amp;#10;&amp;#10;last_time = 0" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False&amp;#10;if restart_anim:&amp;#10;    exp_benefit_A_demo.setPos((-0.35, .15))&amp;#10;    exp_benefit_B_demo.pos = (0.35, .15)&amp;#10;    exp_side_effect_A_demo.pos = (-0.35, 0.1)&amp;#10;    exp_side_effect_B_demo.pos = (0.35, 0.1)&amp;#10;    restart_anim = False&amp;#10;    exp_benefit_A_demo.setOpacity(.2)&amp;#10;    exp_benefit_B_demo.setOpacity(.2)&amp;#10;    exp_side_effect_A_demo.setOpacity(.2)&amp;#10;    exp_side_effect_B_demo.setOpacity(.2)&amp;#10;    last_time = 0&amp;#10;    anim_clock.reset()&amp;#10;&amp;#10;&amp;#10;if not restart_anim:&amp;#10;    current_b_a = exp_benefit_A_demo.pos&amp;#10;    current_b_b = exp_benefit_B_demo.pos&amp;#10;    current_se_a = exp_side_effect_A_demo.pos&amp;#10;    current_se_b = exp_side_effect_B_demo.pos&amp;#10;&amp;#10;    now_time = anim_clock.getTime()&amp;#10;    time_delta = now_time - last_time&amp;#10;    last_time = now_time&amp;#10;&amp;#10;    exp_benefit_A_demo.pos = [-0.35, current_b_a[1] + pos_step_size * time_delta]&amp;#10;    exp_benefit_B_demo.pos = [0.35, current_b_b[1] + pos_step_size * time_delta]&amp;#10;    exp_side_effect_A_demo.pos = [-0.35, current_se_a[1] + pos_step_size * time_delta]&amp;#10;    exp_side_effect_B_demo.pos = [0.35, current_se_b[1] + pos_step_size * time_delta]&amp;#10;    &amp;#10;    op = exp_benefit_A_demo.opacity&amp;#10;    if op &gt; 1: op = 1;&amp;#10;    exp_benefit_A_demo.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_benefit_B_demo.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_side_effect_A_demo.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    exp_side_effect_B_demo.setOpacity(op + opacity_step_size * time_delta)&amp;#10;    &amp;#10;    &amp;#10;    if exp_benefit_A_demo.pos[1] &gt; .2:&amp;#10;        exp_benefit_A_demo.pos = [-0.35, .2]&amp;#10;    if exp_benefit_B_demo.pos[1] &gt; .2:&amp;#10;        exp_benefit_B_demo.pos = [0.35, .2]&amp;#10;    if exp_side_effect_A_demo.pos[1] &gt; .15:&amp;#10;        exp_side_effect_A_demo.pos = [-0.35, .15]&amp;#10;    if exp_side_effect_B_demo.pos[1] &gt; .15:&amp;#10;        exp_side_effect_B_demo.pos = [0.35, .15]&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (restart_anim) {&amp;#10;    exp_benefit_A_demo.setPos([(- 0.35), 0.15]);&amp;#10;    exp_benefit_B_demo.pos = [0.35, 0.15];&amp;#10;    exp_side_effect_A_demo.pos = [(- 0.35), 0.1];&amp;#10;    exp_side_effect_B_demo.pos = [0.35, 0.1];&amp;#10;    restart_anim = false;&amp;#10;    exp_benefit_A_demo.setOpacity(0.2);&amp;#10;    exp_benefit_B_demo.setOpacity(0.2);&amp;#10;    exp_side_effect_A_demo.setOpacity(0.2);&amp;#10;    exp_side_effect_B_demo.setOpacity(0.2);&amp;#10;    last_time = 0;&amp;#10;    anim_clock.reset();&amp;#10;}&amp;#10;if ((! restart_anim)) {&amp;#10;    current_b_a = exp_benefit_A_demo.pos;&amp;#10;    current_b_b = exp_benefit_B_demo.pos;&amp;#10;    current_se_a = exp_side_effect_A_demo.pos;&amp;#10;    current_se_b = exp_side_effect_B_demo.pos;&amp;#10;    now_time = anim_clock.getTime();&amp;#10;    time_delta = (now_time - last_time);&amp;#10;    last_time = now_time;&amp;#10;    exp_benefit_A_demo.pos = [(- 0.35), (current_b_a[1] + (pos_step_size * time_delta))];&amp;#10;    exp_benefit_B_demo.pos = [0.35, (current_b_b[1] + (pos_step_size * time_delta))];&amp;#10;    exp_side_effect_A_demo.pos = [(- 0.35), (current_se_a[1] + (pos_step_size * time_delta))];&amp;#10;    exp_side_effect_B_demo.pos = [0.35, (current_se_b[1] + (pos_step_size * time_delta))];&amp;#10;    op = exp_benefit_A_demo.opacity;&amp;#10;    if ((op &gt; 1)) {&amp;#10;        op = 1;&amp;#10;    }&amp;#10;    exp_benefit_A_demo.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_benefit_B_demo.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_side_effect_A_demo.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    exp_side_effect_B_demo.setOpacity((op + (opacity_step_size * time_delta)));&amp;#10;    if ((exp_benefit_A_demo.pos[1] &gt; 0.2)) {&amp;#10;        exp_benefit_A_demo.pos = [(- 0.35), 0.2];&amp;#10;    }&amp;#10;    if ((exp_benefit_B_demo.pos[1] &gt; 0.2)) {&amp;#10;        exp_benefit_B_demo.pos = [0.35, 0.2];&amp;#10;    }&amp;#10;    if ((exp_side_effect_A_demo.pos[1] &gt; 0.15)) {&amp;#10;        exp_side_effect_A_demo.pos = [(- 0.35), 0.15];&amp;#10;    }&amp;#10;    if ((exp_side_effect_B_demo.pos[1] &gt; 0.15)) {&amp;#10;        exp_side_effect_B_demo.pos = [0.35, 0.15];&amp;#10;    }&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="anim_demo" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <CodeComponent name="handle_sampling_demo">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="import random&amp;#10;import json&amp;#10;import re&amp;#10;&amp;#10;&amp;#10;beep = sound.Sound('stim/mouse_move.wav', secs=0.00001, hamming=False)&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="is_clicked = false;&amp;#10;is_clicked_sample_A = false;&amp;#10;is_clicked_sample_B = false;&amp;#10;is_clicked_choose_A = false;&amp;#10;was_clicked_choose_A = false;&amp;#10;is_clicked_choose_B = false;&amp;#10;was_clicked_choose_B = false;&amp;#10;play_sound = false;&amp;#10;show_b = false;&amp;#10;show_a = false;&amp;#10;show_a_b = false;&amp;#10;show_a_se = false;&amp;#10;nothing_shown_a = false;&amp;#10;show_b_b = false;&amp;#10;show_b_se = false;&amp;#10;nothing_shown_b = false;&amp;#10;&amp;#10;a_where = Math.round(Math.random())&amp;#10;if ((a_where === &quot;l&quot;)) {&amp;#10;    problem = {&quot;A&quot;: {&quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: Number.parseFloat(0.8), &quot;v_se&quot;: &quot;Schwindel&quot;, &quot;p_se&quot;: Number.parseFloat(0.4)}, &quot;B&quot;: {&quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: Number.parseFloat(0.7), &quot;v_se&quot;: &quot;Fieber&quot;, &quot;p_se&quot;: Number.parseFloat(0.1)}};&amp;#10;} else {&amp;#10;    problem = {&quot;B&quot;: {&quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: Number.parseFloat(0.8), &quot;v_se&quot;: &quot;Schwindel&quot;, &quot;p_se&quot;: Number.parseFloat(0.4)}, &quot;A&quot;: {&quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: Number.parseFloat(0.7), &quot;v_se&quot;: &quot;Fieber&quot;, &quot;p_se&quot;: Number.parseFloat(0.1)}};&amp;#10;}&amp;#10;&amp;#10;&amp;#10;exp_benefit_A_demo.setAutoDraw(false);&amp;#10;exp_benefit_B_demo.setAutoDraw(false);&amp;#10;exp_side_effect_A_demo.setAutoDraw(false);&amp;#10;exp_side_effect_B_demo.setAutoDraw(false);&amp;#10;exp_button_choose_A_demo.setAutoDraw(false);&amp;#10;exp_button_choose_B_demo.setAutoDraw(false);&amp;#10;&amp;#10;exp_benefit_A_demo.setText((&quot;Erfolg: &quot; + problem[&quot;A&quot;][&quot;v_b&quot;].toString()));&amp;#10;exp_benefit_B_demo.setText((&quot;Erfolg: &quot; + problem[&quot;B&quot;][&quot;v_b&quot;].toString()));&amp;#10;exp_side_effect_A_demo.setText((&quot;Nebenwirkung: &quot; + problem[&quot;A&quot;][&quot;v_se&quot;].toString()));&amp;#10;exp_side_effect_B_demo.setText((&quot;Nebenwirkung: &quot; + problem[&quot;B&quot;][&quot;v_se&quot;].toString()));&amp;#10;clicks = [];&amp;#10;click_timer = new util.Clock();&amp;#10;beep = new sound.Sound({&amp;#10;  win: psychoJS.window,&amp;#10;  value: &quot;stim/mouse_move.wav&quot;,&amp;#10;  secs: 0.00001});&amp;#10;  &amp;#10;step1 = {&quot;draw_choose&quot;: false, &quot;step_nr&quot;: 1, &quot;contin&quot;: &quot;sa&quot;, &quot;message&quot;: &quot;Probieren Sie, die Box A anzuklicken, um das Medikament auszuprobieren!&quot;};&amp;#10;step2 = {&quot;draw_choose&quot;: false, &quot;step_nr&quot;: 2, &quot;contin&quot;: &quot;sa&quot;, &quot;message&quot;: &quot;Klicken Sie ein weiteres Mal auf Box A!&quot;};&amp;#10;step3 = {&quot;draw_choose&quot;: false, &quot;step_nr&quot;: 3, &quot;contin&quot;: &quot;sa&quot;, &quot;message&quot;: &quot;So k\u00f6nnen Sie die dahinterliegenden Wahrscheinlichkeiten herausbekommen.\nKlicken Sie nochmal auf Box A!&quot;};&amp;#10;step4 = {&quot;draw_choose&quot;: false, &quot;step_nr&quot;: 4, &quot;contin&quot;: &quot;sb&quot;, &quot;message&quot;: &quot;Sehr gut! Versuchen Sie jetzt auf Box B zu klicken, um dieses Medikament auszuprobieren!&quot;};&amp;#10;step5 = {&quot;draw_choose&quot;: false, &quot;step_nr&quot;: 5, &quot;contin&quot;: &quot;sb&quot;, &quot;message&quot;: &quot;Klicken Sie nochmal auf Box B!&quot;};&amp;#10;step6 = {&quot;draw_choose&quot;: true, &quot;step_nr&quot;: 6, &quot;contin&quot;: &quot;&quot;, &quot;message&quot;: &quot;Sie k\u00f6nnen noch so viel ausprobieren, wie Sie m\u00f6chten.\nWenn Sie bereit sind eine Entscheidung zu treffen, klicken Sie auf eine der 'W\u00e4hlen' Boxen.\nSie k\u00f6nnen den Ablauf dann nochmal an zwei Medikamentenpaaren ohne Hilfestellung ausprobieren.&quot;};&amp;#10;steps = [step1, step2, step3, step4, step5, step6];&amp;#10;steps.reverse();&amp;#10;current_step = steps.pop();&amp;#10;last_click = 0&amp;#10;cooldown = .5" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="is_clicked= False&amp;#10;is_clicked_sample_A = False&amp;#10;is_clicked_sample_B = False&amp;#10;is_clicked_choose_A = False&amp;#10;was_clicked_choose_A = False&amp;#10;is_clicked_choose_B = False&amp;#10;was_clicked_choose_B = False&amp;#10;play_sound = False&amp;#10;show_a_b = False&amp;#10;show_a_se = False&amp;#10;nothing_shown_a = False&amp;#10;show_b_b = False&amp;#10;show_b_se = False&amp;#10;nothing_shown_b = False&amp;#10;&amp;#10;a_where = random.choice([&quot;l&quot;, &quot;r&quot;])&amp;#10;&amp;#10;if a_where == &quot;l&quot;:&amp;#10;    problem = {&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: float(.8),&amp;#10;    &quot;v_se&quot;: &quot;Schwindel&quot;, &quot;p_se&quot;: float(.4)&amp;#10;    },&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: float(.7),&amp;#10;    &quot;v_se&quot;: &quot;Fieber&quot;, &quot;p_se&quot;: float(.1)&amp;#10;    }&amp;#10;    }&amp;#10;else:&amp;#10;    problem = {&amp;#10;    &quot;B&quot;: {&amp;#10;    &quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: float(.8),&amp;#10;    &quot;v_se&quot;:&quot;Schwindel&quot;, &quot;p_se&quot;: float(.4)&amp;#10;    },&amp;#10;    &quot;A&quot;: {&amp;#10;    &quot;v_b&quot;: &quot;leichte Bauchschmerzen&quot;, &quot;p_b&quot;: float(.7),&amp;#10;    &quot;v_se&quot;: &quot;Fieber&quot;, &quot;p_se&quot;: float(.1)&amp;#10;    }&amp;#10;    }&amp;#10;&amp;#10;&amp;#10;show_b = False&amp;#10;show_a = False&amp;#10;&amp;#10;exp_benefit_A_demo.setText(&quot;Erfolg: &quot; + str(problem[&quot;A&quot;][&quot;v_b&quot;]))&amp;#10;exp_benefit_B_demo.setText(&quot;Erfolg: &quot; + str(problem[&quot;B&quot;][&quot;v_b&quot;]))&amp;#10;exp_side_effect_A_demo.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;A&quot;][&quot;v_se&quot;]))&amp;#10;exp_side_effect_B_demo.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;B&quot;][&quot;v_se&quot;]))&amp;#10;&amp;#10;clicks = []&amp;#10;click_timer = core.Clock()&amp;#10;&amp;#10;&amp;#10;last_click = 0&amp;#10;cooldown = .5&amp;#10;&amp;#10;&amp;#10;&amp;#10;exp_benefit_A_demo.setAutoDraw(False)&amp;#10;exp_benefit_B_demo.setAutoDraw(False)&amp;#10;exp_side_effect_A_demo.setAutoDraw(False)&amp;#10;exp_side_effect_B_demo.setAutoDraw(False)&amp;#10;exp_button_choose_A_demo.setAutoDraw(False)&amp;#10;exp_button_choose_B_demo.setAutoDraw(False)&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;step1 = {&amp;#10;&quot;draw_choose&quot;: False,&amp;#10;&quot;step_nr&quot;: 1,&amp;#10;&quot;contin&quot;: &quot;sa&quot;,&amp;#10;&quot;message&quot;: &quot;Probieren Sie, die Box A anzuklicken, um das Medikament auszuprobieren!&quot;&amp;#10;}&amp;#10;&amp;#10;step2 = {&quot;draw_choose&quot;: False,&amp;#10;&quot;step_nr&quot;: 2,&amp;#10;&quot;contin&quot;: &quot;sa&quot;,&amp;#10;&quot;message&quot;: &quot;Klicken Sie ein weiteres Mal auf Box A!&quot;&amp;#10;}&amp;#10;&amp;#10;step3 = {&quot;draw_choose&quot;: False,&amp;#10;&quot;step_nr&quot;: 3,&amp;#10;&quot;contin&quot;: &quot;sa&quot;,&amp;#10;&quot;message&quot;: &quot;So können Sie die dahinterliegenden Wahrscheinlichkeiten herausbekommen.\nKlicken Sie nochmal auf Box A!&quot;&amp;#10;}&amp;#10;&amp;#10;step4 = {&quot;draw_choose&quot;: False,&amp;#10;&quot;step_nr&quot;: 4,&amp;#10;&quot;contin&quot;: &quot;sb&quot;,&amp;#10;&quot;message&quot;: &quot;Sehr gut! Versuchen Sie jetzt auf Box B zu klicken, um dieses Medikament auszuprobieren!&quot;&amp;#10;}&amp;#10;step5 = {&quot;draw_choose&quot;: False,&amp;#10;&quot;step_nr&quot;: 5,&amp;#10;&quot;contin&quot;: &quot;sb&quot;,&amp;#10;&quot;message&quot;: &quot;Klicken Sie nochmal auf Box B!&quot;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;step6 = {&quot;draw_choose&quot;: True,&amp;#10;&quot;step_nr&quot;: 6,&amp;#10;&quot;contin&quot;: &quot;&quot;,&amp;#10;&quot;message&quot;: &quot;Sie können noch so viel ausprobieren, wie Sie möchten.\nWenn Sie bereit sind eine Entscheidung zu treffen, klicken Sie auf eine der 'Wählen' Boxen.\nSie können den Ablauf dann nochmal an zwei Medikamentenpaaren ohne Hilfestellung ausprobieren.&quot;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;steps = [step1, step2, step3, step4, step5, step6]&amp;#10;steps.reverse()&amp;#10;current_step = steps.pop()" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Both" valType="str" updates="None" name="Code Type"/>
        <Param val="exp_benefit_A_demo.setAutoDraw(False)&amp;#10;exp_benefit_B_demo.setAutoDraw(False)&amp;#10;exp_side_effect_A_demo.setAutoDraw(False)&amp;#10;exp_side_effect_B_demo.setAutoDraw(False)&amp;#10;exp_button_choose_A_demo.setAutoDraw(False)&amp;#10;exp_button_choose_B_demo.setAutoDraw(False)&amp;#10;&amp;#10;&amp;#10;&amp;#10;if exp_click_demo.isPressedIn(exp_med_a_box_demo) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_med_a_box_demo.fillColor=&quot;grey&quot;&amp;#10;    is_clicked_sample_A = True&amp;#10;    is_clicked = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_med_a_box_demo.fillColor=&quot;white&quot;&amp;#10;    is_clicked = False&amp;#10;&amp;#10;&amp;#10;if exp_click_demo.isPressedIn(exp_med_b_box_demo) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_med_b_box_demo.fillColor=&quot;grey&quot;&amp;#10;    is_clicked_sample_B = True&amp;#10;    is_clicked = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_med_b_box_demo.fillColor=&quot;white&quot;&amp;#10;    is_clicked = False&amp;#10;&amp;#10;&amp;#10;if exp_click_demo.isPressedIn(exp_button_choose_A) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    is_clicked = True&amp;#10;    is_clicked_choose_A = True&amp;#10;    was_clicked_choose_A =  True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_button_choose_A.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;    is_clicked = False&amp;#10;    is_clicked_choose_A= False&amp;#10;&amp;#10;if exp_click_demo.isPressedIn(exp_button_choose_B) and click_timer.getTime() &gt; last_click + cooldown:&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose_pressed.png&quot;)&amp;#10;    is_clicked = True&amp;#10;    is_clicked_choose_B = True&amp;#10;    was_clicked_choose_B = True&amp;#10;    last_click = click_timer.getTime()&amp;#10;else:&amp;#10;    exp_button_choose_B.setImage(&quot;stim/button_choose.png&quot;)&amp;#10;    is_clicked = False&amp;#10;    is_clicked_choose_B = False&amp;#10; &amp;#10;&amp;#10;&amp;#10;# handle_sampling A&amp;#10;if is_clicked_sample_A and not is_clicked and not exp_click_demo.isPressedIn(exp_med_a_box_demo):&amp;#10;    show_a_b = random.random() &lt; problem[&quot;A&quot;][&quot;p_b&quot;]&amp;#10;    show_a_se = random.random() &lt; problem[&quot;A&quot;][&quot;p_se&quot;]&amp;#10;&amp;#10;    if current_step[&quot;step_nr&quot;] == 1:&amp;#10;        show_a_se = True&amp;#10;    elif current_step[&quot;step_nr&quot;] == 2:&amp;#10;        show_a_se = False&amp;#10;    if current_step[&quot;contin&quot;] == &quot;sa&quot;:&amp;#10;        current_step = steps.pop()&amp;#10;    &amp;#10;    if not show_a_b:&amp;#10;        exp_benefit_A_demo.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_A_demo.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_benefit_A_demo.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_A_demo.color = &quot;green&quot;&amp;#10;    &amp;#10;&amp;#10;&amp;#10;    if not show_a_se:&amp;#10;        exp_side_effect_A_demo.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_A_demo.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_side_effect_A_demo.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;A&quot;][&quot;v_se&quot;]))&amp;#10;        exp_side_effect_A_demo.color = &quot;red&quot;&amp;#10;    &amp;#10;    show_b = False&amp;#10;    show_a = True&amp;#10;    show_b_b = False&amp;#10;    show_b_se = False&amp;#10;    nothing_shown_b = False&amp;#10;    is_clicked_sample_A = False&amp;#10;    restart_anim = True&amp;#10;    is_anim = True&amp;#10;    play_sound = True&amp;#10;&amp;#10;&amp;#10;&amp;#10;# handle_sampling B&amp;#10;if is_clicked_sample_B and not is_clicked and not exp_click_demo.isPressedIn(exp_med_b_box_demo):&amp;#10;    show_b_b = random.random() &lt; problem[&quot;B&quot;][&quot;p_b&quot;]&amp;#10;    show_b_se = random.random() &lt; problem[&quot;B&quot;][&quot;p_se&quot;]&amp;#10;    if current_step[&quot;contin&quot;] == &quot;sb&quot;:&amp;#10;        current_step = steps.pop()&amp;#10;    if not show_b_b:&amp;#10;        exp_benefit_B_demo.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_B_demo.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_benefit_B_demo.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_B_demo.color = &quot;green&quot;&amp;#10;&amp;#10;    if not show_b_se:&amp;#10;        exp_side_effect_B_demo.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_B_demo.color = &quot;black&quot;&amp;#10;    else:&amp;#10;        exp_side_effect_B_demo.setText(&quot;Nebenwirkung: &quot; + str(problem[&quot;B&quot;][&quot;v_se&quot;]))&amp;#10;        exp_side_effect_B_demo.color = &quot;red&quot;&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;    show_b = True&amp;#10;    show_a = False&amp;#10;    show_a_b = False&amp;#10;    show_a_se = False&amp;#10;    nothing_shown_a = False&amp;#10;    is_clicked_sample_B = False&amp;#10;    restart_anim = True&amp;#10;    is_anim = True&amp;#10;    play_sound = True&amp;#10;&amp;#10;&amp;#10;&amp;#10;if play_sound:&amp;#10;    beep.play()&amp;#10;    play_sound = False&amp;#10;    &amp;#10;if show_a:&amp;#10;    exp_benefit_A_demo.draw()&amp;#10;    exp_side_effect_A_demo.draw()&amp;#10;&amp;#10;if show_b:&amp;#10;    exp_benefit_B_demo.draw()&amp;#10;    exp_side_effect_B_demo.draw()&amp;#10;&amp;#10;exp_benefit_A_demo.setAutoDraw(False)&amp;#10;exp_benefit_B_demo.setAutoDraw(False)&amp;#10;exp_side_effect_A_demo.setAutoDraw(False)&amp;#10;exp_side_effect_B_demo.setAutoDraw(False)&amp;#10;exp_button_choose_A_demo.setAutoDraw(False)&amp;#10;exp_button_choose_B_demo.setAutoDraw(False)&amp;#10;    &amp;#10;if current_step[&quot;draw_choose&quot;]:&amp;#10;    exp_button_choose_A_demo.setAutoDraw(True)&amp;#10;    exp_button_choose_B_demo.setAutoDraw(True)&amp;#10;instruct_demo.setText(current_step[&quot;message&quot;])&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;    &amp;#10;if was_clicked_choose_A and not is_clicked_choose_A and not is_clicked:&amp;#10;    continueRoutine=False&amp;#10;    thisExp.addData(&quot;chosen_exp&quot;, &quot;left&quot;)&amp;#10;&amp;#10;if was_clicked_choose_B and not is_clicked_choose_B and not is_clicked:&amp;#10;    continueRoutine=False&amp;#10;    thisExp.addData(&quot;chosen_exp&quot;, &quot;right&quot;)&amp;#10;    &amp;#10;&amp;#10;&amp;#10;&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="exp_benefit_A_demo.setAutoDraw(false);&amp;#10;exp_benefit_B_demo.setAutoDraw(false);&amp;#10;exp_side_effect_A_demo.setAutoDraw(false);&amp;#10;exp_side_effect_B_demo.setAutoDraw(false);&amp;#10;exp_button_choose_A_demo.setAutoDraw(false);&amp;#10;exp_button_choose_B_demo.setAutoDraw(false);&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (exp_click_demo.isPressedIn(exp_med_a_box_demo) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_med_a_box_demo.fillColor = &quot;grey&quot;;&amp;#10;    is_clicked_sample_A = true;&amp;#10;    is_clicked = true;&amp;#10;} else {&amp;#10;    exp_med_a_box_demo.fillColor = &quot;white&quot;;&amp;#10;    is_clicked = false;&amp;#10;}&amp;#10;if (exp_click_demo.isPressedIn(exp_med_b_box_demo) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_med_b_box_demo.fillColor = &quot;grey&quot;;&amp;#10;    is_clicked_sample_B = true;&amp;#10;    is_clicked = true;&amp;#10;} else {&amp;#10;    exp_med_b_box_demo.fillColor = &quot;white&quot;;&amp;#10;    is_clicked = false;&amp;#10;}&amp;#10;if (exp_click_demo.isPressedIn(exp_button_choose_A_demo) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_button_choose_A_demo.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    is_clicked = true;&amp;#10;    is_clicked_choose_A = true;&amp;#10;    was_clicked_choose_A = true;&amp;#10;} else {&amp;#10;    exp_button_choose_A_demo.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;    is_clicked = false;&amp;#10;    is_clicked_choose_A = false;&amp;#10;}&amp;#10;if (exp_click_demo.isPressedIn(exp_button_choose_B_demo) &amp;&amp; click_timer.getTime() &gt; last_click + cooldown) {&amp;#10;    exp_button_choose_B_demo.setImage(&quot;stim/button_choose_pressed.png&quot;);&amp;#10;    is_clicked = true;&amp;#10;    is_clicked_choose_B = true;&amp;#10;    was_clicked_choose_B = true;&amp;#10;} else {&amp;#10;    exp_button_choose_B_demo.setImage(&quot;stim/button_choose.png&quot;);&amp;#10;    is_clicked = false;&amp;#10;    is_clicked_choose_B = false;&amp;#10;}&amp;#10;&amp;#10;&amp;#10;if (exp_click_demo.isPressedIn(exp_med_a_box_demo) || exp_click_demo.isPressedIn(exp_med_b_box_demo) || exp_click_demo.isPressedIn(exp_button_choose_A_demo) || exp_click_demo.isPressedIn(exp_button_choose_B_demo) ) {&amp;#10;    &amp;#10;    is_clicked = true&amp;#10;    } else {&amp;#10;        is_clicked = false&amp;#10;        }&amp;#10;&amp;#10;&amp;#10;if (((is_clicked_sample_A &amp;&amp; (! is_clicked)) &amp;&amp; (! exp_click_demo.isPressedIn(exp_med_a_box_demo)))) {&amp;#10;    show_a_b = (Math.random() &lt; problem[&quot;A&quot;][&quot;p_b&quot;]);&amp;#10;    show_a_se = (Math.random() &lt; problem[&quot;A&quot;][&quot;p_se&quot;]);&amp;#10;    if ((current_step[&quot;step_nr&quot;] === 1)) {&amp;#10;      show_a_se = true;&amp;#10;  } else {&amp;#10;      if ((current_step[&quot;step_nr&quot;] === 2)) {&amp;#10;          show_a_se = false;&amp;#10;      }&amp;#10;  }&amp;#10;  if ((current_step[&quot;contin&quot;] === &quot;sa&quot;)) {&amp;#10;      current_step = steps.pop();&amp;#10;  }&amp;#10;    last_click = click_timer.getTime()&amp;#10;&amp;#10;    if (!show_a_b) {&amp;#10;        &amp;#10;        exp_benefit_A_demo.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_A_demo.color = &quot;black&quot;&amp;#10;        &amp;#10;         } else {&amp;#10;            &amp;#10;        exp_benefit_A_demo.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_A_demo.color = &quot;green&quot;&amp;#10;        &amp;#10;            }&amp;#10;    &amp;#10;    if (!show_a_se) {&amp;#10;        exp_side_effect_A_demo.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_A_demo.color = &quot;black&quot;&amp;#10;        } else {&amp;#10;        exp_side_effect_A_demo.setText((&quot;Nebenwirkung: &quot; + problem[&quot;A&quot;][&quot;v_se&quot;].toString()))&amp;#10;        exp_side_effect_A_demo.color = &quot;red&quot;            &amp;#10;            }&amp;#10;    &amp;#10;    show_b = false&amp;#10;    show_a = true&amp;#10;    show_b_b = false;&amp;#10;    show_b_se = false;&amp;#10;    nothing_shown_b = false;&amp;#10;    is_clicked_sample_A = false;&amp;#10;    restart_anim = true;&amp;#10;    is_anim = true;&amp;#10;    play_sound = true;&amp;#10;    clicks.push({&quot;which&quot;: &quot;left&quot;, &quot;time&quot;: click_timer.getTime(), &quot;se_shown&quot;: show_a_se, &quot;b_shown&quot;: show_a_b});&amp;#10;}&amp;#10;if (((is_clicked_sample_B &amp;&amp; (! is_clicked)) &amp;&amp; (! exp_click_demo.isPressedIn(exp_med_b_box_demo)))) {&amp;#10;    show_b_b = (Math.random() &lt; problem[&quot;B&quot;][&quot;p_b&quot;]);&amp;#10;    show_b_se = (Math.random() &lt; problem[&quot;B&quot;][&quot;p_se&quot;]);&amp;#10;&amp;#10;&amp;#10;&amp;#10;    if ((current_step[&quot;contin&quot;] === &quot;sb&quot;)) {&amp;#10;      current_step = steps.pop();&amp;#10;  }&amp;#10;&amp;#10;    last_click = click_timer.getTime()&amp;#10;&amp;#10;    if (!show_b_b) {&amp;#10;        &amp;#10;        exp_benefit_B_demo.setText(&quot;Keine erfolgreiche Behandlung&quot;)&amp;#10;        exp_benefit_B_demo.color = &quot;black&quot;&amp;#10;        &amp;#10;         } else {&amp;#10;            &amp;#10;        exp_benefit_B_demo.setText(&quot;Behandlung erfolgreich&quot;)&amp;#10;        exp_benefit_B_demo.color = &quot;green&quot;&amp;#10;        &amp;#10;            }&amp;#10;    &amp;#10;    if (!show_b_se) {&amp;#10;        exp_side_effect_B_demo.setText(&quot;Keine Nebenwirkung&quot;)&amp;#10;        exp_side_effect_B_demo.color = &quot;black&quot;&amp;#10;        } else {&amp;#10;        exp_side_effect_B_demo.setText((&quot;Nebenwirkung: &quot; + problem[&quot;B&quot;][&quot;v_se&quot;].toString()))&amp;#10;        exp_side_effect_B_demo.color = &quot;red&quot;            &amp;#10;            }&amp;#10;        &amp;#10;        &amp;#10;        &amp;#10;    show_b = true&amp;#10;    show_a = false&amp;#10;    show_a_b = false;&amp;#10;    show_a_se = false;&amp;#10;    nothing_shown_a = false;&amp;#10;    is_clicked_sample_B = false;&amp;#10;    restart_anim = true;&amp;#10;    is_anim = true;&amp;#10;    play_sound = true;&amp;#10;    clicks.push({&quot;which&quot;: &quot;right&quot;, &quot;time&quot;: click_timer.getTime(), &quot;se_shown&quot;: show_b_se, &quot;b_shown&quot;: show_b_b});&amp;#10;}&amp;#10;if (play_sound) {&amp;#10;    beep.play(0);&amp;#10;    play_sound = false;&amp;#10;}&amp;#10;if (show_a) {&amp;#10;    exp_benefit_A_demo.draw();&amp;#10;    exp_side_effect_A_demo.draw();&amp;#10;}&amp;#10;&amp;#10;if (show_b) {&amp;#10;    exp_benefit_B_demo.draw();&amp;#10;    exp_side_effect_B_demo.draw();&amp;#10;}&amp;#10;&amp;#10;&amp;#10;&amp;#10;&amp;#10;if (((was_clicked_choose_A &amp;&amp; (! is_clicked_choose_A)) &amp;&amp; (! is_clicked))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if (((was_clicked_choose_B &amp;&amp; (! is_clicked_choose_B)) &amp;&amp; (! is_clicked))) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;if (current_step[&quot;draw_choose&quot;]) {&amp;#10;  exp_button_choose_A_demo.draw();&amp;#10;  exp_button_choose_B_demo.draw();&amp;#10;}&amp;#10;instruct_demo.setText(current_step[&quot;message&quot;]);" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="handle_sampling_demo" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <TextComponent name="label_what_treat_demo">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.04" valType="num" updates="constant" name="letterHeight"/>
        <Param val="label_what_treat_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .31)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="$&quot;Behandelt: &quot; + &quot;leichte Bauchschmerzen&quot;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextComponent name="instruct_demo">
        <Param val="green" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.023" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_demo" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, -.32)" valType="list" updates="constant" name="pos"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Any text&amp;#10;&amp;#10;including line breaks" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="skip_sample">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_sample" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="two_trials"/>
    <Routine name="instruct_small_text"/>
    <Routine name="skip_first_sampling">
      <CodeComponent name="skip_log">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if starts_with == &quot;desc&quot;:&amp;#10;    continueRoutine= False&amp;#10;    propagate = True&amp;#10;else:&amp;#10;    propagate = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((starts_with === &quot;desc&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;    propagate = true;&amp;#10;} else {&amp;#10;    propagate = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip_instruct1">
      <CodeComponent name="skip_instruct_1_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    sample_small_test.finished=True&amp;#10;    continueRoutne = False&amp;#10;" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    sample_small_test.finished = true;&amp;#10;    continueRoutne = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_instruct_1_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip_second_sampling">
      <CodeComponent name="skip_scnd_sample_log">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if starts_with == &quot;desc&quot;:&amp;#10;    continueRoutine= False&amp;#10;    propagate = False&amp;#10;else:&amp;#10;    propagate = True&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((starts_with === &quot;desc&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;    propagate = false;&amp;#10;} else {&amp;#10;    propagate = true;&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_scnd_sample_log" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip_instruct2">
      <CodeComponent name="skip_instruct2_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False&amp;#10;    instruct_sampling2.finished=True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;    instruct_sampling2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_instruct2_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="sampling_instructions">
      <ImageComponent name="instruct_pic">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ipic" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="instruct_pic" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="contin_instruct_sampling">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_instruct_sampling" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="skip_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip_instruct_1">
      <CodeComponent name="skip_i1_logic">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False&amp;#10;    sampling_instructions1.finished=True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;    sampling_instructions1.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_i1_logic" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="skip_instruct2_2"/>
    <Routine name="after_sampling_instructs">
      <TextComponent name="text_after_sampling_instruct">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_after_sampling_instruct" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Sehr gut!&amp;#10;Sie sind jetzt bereit die Aufgabe zu starten. Sie werden insgesamt 60 Entscheidungen treffen. &amp;#10;Drücken Sie die Leertaste, um mit der Aufgabe zu beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="skip_after">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine=False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_after" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="contin_after_s_instruct">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_after_s_instruct" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instruction_description">
      <ImageComponent name="pic_description">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="$[1,1,1]" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="$ipic" valType="file" updates="set every repeat" name="image"/>
        <Param val="linear" valType="str" updates="constant" name="interpolate"/>
        <Param val="" valType="str" updates="constant" name="mask"/>
        <Param val="pic_description" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="128" valType="num" updates="constant" name="texture resolution"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ImageComponent>
      <KeyboardComponent name="contin_instr_description">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_instr_description" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="welcome">
      <TextComponent name="welcome_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="welcome_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Willkommen zu dem Experiment!&amp;#10;Sie werden gleich zwei verschiedene Aufgaben durchführen - wie diese Aufgaben funktionieren, werden wir Ihnen im Verlaufe erklären. Drücken Sie jetzt die Leertaste, um mit der ersten Aufgabe zu beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_welcome">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_welcome" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="first_task_done_a">
      <TextComponent name="first_task_done_a_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="first_task_done_a_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Sie haben die erste Aufgabe geschafft. Nehmen Sie sich einen Moment Zeit um durchzuatmen und drücken Sie die Leertaste, um mit der zweiten Aufgabe zu beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <CodeComponent name="code">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if starts_with == &quot;desc&quot;:&amp;#10;    continueRoutine = False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((starts_with === &quot;desc&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <KeyboardComponent name="first_task_done_a_contin">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="first_task_done_a_contin" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="first_task_done_b">
      <TextComponent name="first_task_done_b_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Open Sans" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="first_task_done_b_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Sie haben die erste Aufgabe geschafft. Nehmen Sie sich einen Moment Zeit um durchzuatmen und drücken Sie die Leertaste, um mit der zweiten Aufgabe zu beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_first_task_done_b">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_first_task_done_b" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
      <CodeComponent name="code_2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if starts_with != &quot;desc&quot;:&amp;#10;    continueRoutine=False" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if ((starts_with !== &quot;desc&quot;)) {&amp;#10;    continueRoutine = false;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="code_2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
    <Routine name="all_tasks_done">
      <TextComponent name="all_tasks_done_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="all_tasks_done_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Vielen Dank, die zweite Aufgabe ist jetzt vorbei. Zum Abschluss würden wir Sie noch bitten kurz uns Ihre Einschätzungen zu den Schmerzen und Nebenwirkungen zu geben, die Sie im Laufe des Experiments gesehen haben.&amp;#10;Wir beginnen mit den Schmerzen: Stellen Sie sich vor, Sie würden unter dem jeweiligen Schmerz leiden - wie belasted wären Sie dadurch? Sie können mit einem Druck auf die Leertaste beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_all_tasks_done">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_all_tasks_done" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="instruct_side_effects">
      <TextComponent name="instruct_side_effects_text">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="instruct_side_effects_text" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Vielen Dank! Zuletzt würden wir Sie noch einmal bitten, sich vorzustellen, eine Medikament einzunehmen, bei der eine der folgenden Nebenwirkungen auftritt. Wie belastet wären Sie, wenn Sie an dieser Nebenwirkung leiden würden? Sie können mit der Leertaste beginnen." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="contin_rating_side_effects">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="contin_rating_side_effects" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="thx">
      <TextComponent name="thanks">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="thanks" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, 0)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Vielen Dank für die Teilnahme am Experiment!&amp;#10;" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <KeyboardComponent name="end_exp">
        <Param val="'space'" valType="list" updates="constant" name="allowedKeys"/>
        <Param val="" valType="str" updates="constant" name="correctAns"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="True" valType="bool" updates="constant" name="discard previous"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="end_exp" valType="code" updates="None" name="name"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="nothing" valType="str" updates="constant" name="store"/>
        <Param val="False" valType="bool" updates="constant" name="storeCorrect"/>
        <Param val="True" valType="bool" updates="constant" name="syncScreenRefresh"/>
      </KeyboardComponent>
    </Routine>
    <Routine name="tactics">
      <TextComponent name="text_task_done">
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="None" valType="str" updates="constant" name="flip"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="text_task_done" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="(0, .3)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Vielen Dank, die Aufgaben sind vorbei!&amp;#10;Wir würden Sie gerne einmal fragen, ob Sie bei der Lösung der beiden Aufgaben eine bestimmte Heuristik/Technik verwendet haben. Haben Sie auf etwas Bestimmtes geachtet? Haben Sie etwas gar nicht beachtet?&amp;#10;Tippen Sie Ihre Antwort im Fenster unten ein. Drücken Sie auf den &quot;Weiter&quot; Button, um Ihre Antwort zu speichern und fortzufahren." valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
        <Param val="" valType="num" updates="constant" name="wrapWidth"/>
      </TextComponent>
      <TextboxComponent name="answer_tactics">
        <Param val="top-center" valType="str" updates="constant" name="alignment"/>
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="autoLog"/>
        <Param val="False" valType="bool" updates="constant" name="bold"/>
        <Param val="black" valType="color" updates="constant" name="borderColor"/>
        <Param val="2" valType="num" updates="constant" name="borderWidth"/>
        <Param val="black" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="True" valType="bool" updates="constant" name="editable"/>
        <Param val="white" valType="color" updates="constant" name="fillColor"/>
        <Param val="False" valType="bool" updates="constant" name="flipHoriz"/>
        <Param val="False" valType="bool" updates="constant" name="flipVert"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="LTR" valType="str" updates="None" name="languageStyle"/>
        <Param val="0.015" valType="num" updates="constant" name="letterHeight"/>
        <Param val="1.0" valType="num" updates="constant" name="lineSpacing"/>
        <Param val="answer_tactics" valType="code" updates="None" name="name"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="0" valType="num" updates="constant" name="padding"/>
        <Param val="(0, -0.1)" valType="list" updates="constant" name="pos"/>
        <Param val="False" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(.7, .4)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0.0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="" valType="str" updates="constant" name="text"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </TextboxComponent>
      <CodeComponent name="handle_flush">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="psychoJS.experiment.addData(&quot;tactic&quot;, answer_tactics.text);&amp;#10;answer_tactics.pos = [(- 10), (- 10)];&amp;#10;" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="thisExp.addData(&quot;tactic&quot;, answer_tactics.text)&amp;#10;answer_tactics.pos = (-10, -10)" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="handle_flush" valType="code" updates="None" name="name"/>
      </CodeComponent>
      <ButtonComponent name="button_contin_tactics">
        <Param val="center" valType="str" updates="constant" name="anchor"/>
        <Param val="True" valType="bool" updates="constant" name="bold"/>
        <Param val="black" valType="color" updates="constant" name="borderColor"/>
        <Param val="0" valType="num" updates="constant" name="borderWidth"/>
        <Param val="" valType="extendedCode" updates="constant" name="callback"/>
        <Param val="white" valType="color" updates="constant" name="color"/>
        <Param val="rgb" valType="str" updates="constant" name="colorSpace"/>
        <Param val="1" valType="num" updates="constant" name="contrast"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="" valType="code" updates="None" name="durationEstim"/>
        <Param val="darkgrey" valType="color" updates="constant" name="fillColor"/>
        <Param val="Arial" valType="str" updates="constant" name="font"/>
        <Param val="True" valType="bool" updates="constant" name="forceEndRoutine"/>
        <Param val="False" valType="bool" updates="constant" name="italic"/>
        <Param val="0.02" valType="num" updates="constant" name="letterHeight"/>
        <Param val="button_contin_tactics" valType="code" updates="None" name="name"/>
        <Param val="True" valType="bool" updates="constant" name="oncePerClick"/>
        <Param val="" valType="num" updates="constant" name="opacity"/>
        <Param val="0" valType="num" updates="constant" name="ori"/>
        <Param val="" valType="num" updates="constant" name="padding"/>
        <Param val="(0.2, -0.35)" valType="list" updates="constant" name="pos"/>
        <Param val="every click" valType="str" updates="None" name="save"/>
        <Param val="True" valType="bool" updates="None" name="saveStartStop"/>
        <Param val="(0.2, 0.065)" valType="list" updates="constant" name="size"/>
        <Param val="" valType="code" updates="None" name="startEstim"/>
        <Param val="time (s)" valType="str" updates="None" name="startType"/>
        <Param val="0" valType="code" updates="None" name="startVal"/>
        <Param val="duration (s)" valType="str" updates="None" name="stopType"/>
        <Param val="" valType="code" updates="constant" name="stopVal"/>
        <Param val="True" valType="bool" updates="None" name="syncScreenRefresh"/>
        <Param val="Weiter" valType="str" updates="constant" name="text"/>
        <Param val="button onset" valType="str" updates="constant" name="timeRelativeTo"/>
        <Param val="from exp settings" valType="str" updates="None" name="units"/>
      </ButtonComponent>
    </Routine>
    <Routine name="skip_instruct_samping_demo">
      <CodeComponent name="skip_demo2">
        <Param val="" valType="extendedCode" updates="constant" name="Before Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Before JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="Begin Routine"/>
        <Param val="Auto-&gt;JS" valType="str" updates="None" name="Code Type"/>
        <Param val="if propagate:&amp;#10;    continueRoutine = False&amp;#10;    instruct_sample_loop_2.finished = True" valType="extendedCode" updates="constant" name="Each Frame"/>
        <Param val="if (propagate) {&amp;#10;    continueRoutine = false;&amp;#10;    instruct_sample_loop_2.finished = true;&amp;#10;}&amp;#10;" valType="extendedCode" updates="constant" name="Each JS Frame"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Experiment"/>
        <Param val="" valType="extendedCode" updates="constant" name="End JS Routine"/>
        <Param val="" valType="extendedCode" updates="constant" name="End Routine"/>
        <Param val="False" valType="bool" updates="None" name="disabled"/>
        <Param val="skip_demo2" valType="code" updates="None" name="name"/>
      </CodeComponent>
    </Routine>
  </Routines>
  <Flow>
    <Routine name="fix"/>
    <Routine name="prep"/>
    <Routine name="welcome"/>
    <Routine name="skip_first_sampling"/>
    <LoopInitiator loopType="TrialHandler" name="sampling_instructions1">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ipic', 'instruct/instruct_sampling1.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling2.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling3.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling4.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling5.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling6.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/sampling_instructions.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="sampling_instructions1" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip_instruct_1"/>
    <Routine name="sampling_instructions"/>
    <LoopTerminator name="sampling_instructions1"/>
    <Routine name="interactive_sampl_1"/>
    <Routine name="fix"/>
    <LoopInitiator loopType="TrialHandler" name="sample_small_test">
      <Param name="Selected rows" updates="None" val="1:3" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.777), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.785), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.052), ('EU_a', 2.049), ('EU_b', 2.251), ('EU_ratio', 0.910262105730786), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 1)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.88), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.114), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.733), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.178), ('EU_a', 1.304), ('EU_b', 1.11), ('EU_ratio', 1.17477477477477), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 2)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.68), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.251), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.614), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.051), ('EU_a', 5.189), ('EU_b', 4.504), ('EU_ratio', 1.15208703374778), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 3)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.564), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.07), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.092), ('EU_a', 1.272), ('EU_b', 2.154), ('EU_ratio', 0.590529247910863), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 4)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.905), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.709), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.205), ('EU_a', 7.553), ('EU_b', 6.176), ('EU_ratio', 1.22295984455959), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 5)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.057), ('EU_a', 1.547), ('EU_b', 2.04), ('EU_ratio', 0.758333333333333), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 6)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.851), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.865), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.14), ('EU_a', 6.688), ('EU_b', 5.8), ('EU_ratio', 1.15310344827586), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 7)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.545), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.067), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.694), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.026), ('EU_a', 1.032), ('EU_b', 1.822), ('EU_ratio', 0.566410537870472), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 8)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.665), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.68), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.028), ('EU_a', 3.78), ('EU_b', 3.912), ('EU_ratio', 0.966257668711657), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 9)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.921), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.226), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.73), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 8.063), ('EU_b', 6.125), ('EU_ratio', 1.31640816326531), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 10)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.644), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.914), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.14), ('EU_a', 0.504), ('EU_b', 0.494), ('EU_ratio', 1.02024291497976), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 11)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.688), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.122), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.024), ('EU_a', 0.888), ('EU_b', 1.172), ('EU_ratio', 0.757679180887372), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 12)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.635), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.157), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.611), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.092), ('EU_a', 5.565), ('EU_b', 5.558), ('EU_ratio', 1.00125944584383), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 13)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.511), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.049), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.778), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.054), ('EU_a', 0.777), ('EU_b', 1.124), ('EU_ratio', 0.691281138790035), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 14)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.675), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.775), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.176), ('EU_a', 1.245), ('EU_b', 0.846), ('EU_ratio', 1.47163120567376), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 15)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.836), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.703), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.185), ('EU_a', 6.548), ('EU_b', 4.514), ('EU_ratio', 1.45059813912273), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 16)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.922), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.062), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.563), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.056), ('EU_a', 0.364), ('EU_b', 0.227), ('EU_ratio', 1.60352422907489), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 17)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.584), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.015), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.658), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 3.953), ('EU_b', 4.39), ('EU_ratio', 0.900455580865604), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 18)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.804), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.064), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.889), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.163), ('EU_a', 3.7), ('EU_b', 3.956), ('EU_ratio', 0.935288169868554), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 19)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.648), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.541), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.029), ('EU_a', 4.478), ('EU_b', 3.497), ('EU_ratio', 1.28052616528453), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 20)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.696), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.189), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.643), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.223), ('EU_a', 1.203), ('EU_b', 1.063), ('EU_ratio', 1.13170272812794), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 21)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.642), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.213), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.902), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.042), ('EU_a', 6.207), ('EU_b', 8.684), ('EU_ratio', 0.714762782128052), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 22)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.828), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.033), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.104), ('EU_a', 5.631), ('EU_b', 5.462), ('EU_ratio', 1.03094104723544), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 23)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.666), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.054), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.827), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.087), ('EU_a', 0.846), ('EU_b', 1.393), ('EU_ratio', 0.607322325915291), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 24)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.825), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.881), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.199), ('EU_a', 1.27), ('EU_b', 1.563), ('EU_ratio', 0.812539987204095), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 25)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.215), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.8), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.188), ('EU_a', 4.73), ('EU_b', 6.212), ('EU_ratio', 0.761429491307147), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 26)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.517), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.085), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.835), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.072), ('EU_a', 1.99), ('EU_b', 3.527), ('EU_ratio', 0.564218882903317), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 27)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.9), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.786), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.181), ('EU_a', 7.08), ('EU_b', 5.745), ('EU_ratio', 1.23237597911227), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 28)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.676), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.218), ('EU_a', 4.5), ('EU_b', 3.779), ('EU_ratio', 1.19079121460704), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 29)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.784), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.208), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 4.496), ('EU_b', 3.632), ('EU_ratio', 1.23788546255507), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 30)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.769), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.091), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.681), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.219), ('EU_a', 3.481), ('EU_b', 2.091), ('EU_ratio', 1.66475370636059), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 31)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.132), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.782), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.036), ('EU_b', 3.77), ('EU_ratio', 1.07055702917772), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 32)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.896), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.117), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.137), ('EU_a', 4.674), ('EU_b', 2.895), ('EU_ratio', 1.61450777202073), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 33)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.944), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.135), ('EU_a', 3.302), ('EU_b', 5.663), ('EU_ratio', 0.583083171463888), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 34)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.575), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.724), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.183), ('EU_a', 1.585), ('EU_b', 1.257), ('EU_ratio', 1.26093874303898), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 35)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.791), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.019), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.631), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.019), ('EU_a', 2.974), ('EU_b', 2.353), ('EU_ratio', 1.26391840203995), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 36)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.796), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.108), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.838), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.2), ('EU_a', 4.128), ('EU_b', 3.628), ('EU_ratio', 1.13781697905182), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 37)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.08), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.779), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 5.8), ('EU_b', 5.782), ('EU_ratio', 1.00311310965064), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 38)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.752), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.146), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.037), ('EU_a', 6.33), ('EU_b', 5.32), ('EU_ratio', 1.18984962406015), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 39)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.674), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.101), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 6.538), ('EU_b', 6.24), ('EU_ratio', 1.04775641025641), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 40)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.097), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.666), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.02), ('EU_a', 3.994), ('EU_b', 4.522), ('EU_ratio', 0.883237505528527), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 41)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.561), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.199), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.824), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 5.212), ('EU_b', 7.636), ('EU_ratio', 0.682556312205343), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 42)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.767), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.03), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.871), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.117), ('EU_a', 2.858), ('EU_b', 2.665), ('EU_ratio', 1.07242026266417), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 43)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.766), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.635), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.136), ('EU_a', 1.2), ('EU_b', 0.862), ('EU_ratio', 1.39211136890951), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 44)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.609), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.164), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.691), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.081), ('EU_a', 4.099), ('EU_b', 4.675), ('EU_ratio', 0.876791443850267), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 45)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.747), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.791), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.031), ('EU_a', 1.114), ('EU_b', 1.365), ('EU_ratio', 0.816117216117216), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 46)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.654), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.193), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.58), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.248), ('EU_a', 3.538), ('EU_b', 3.232), ('EU_ratio', 1.09467821782178), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 47)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.754), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.088), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.833), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.235), ('EU_a', 2.312), ('EU_b', 2.392), ('EU_ratio', 0.966555183946488), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 48)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.072), ('EU_a', 6.433), ('EU_b', 8.67), ('EU_ratio', 0.741983852364475), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 49)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.697), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.026), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.667), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.119), ('EU_a', 1.186), ('EU_b', 1.215), ('EU_ratio', 0.976131687242798), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 50)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.709), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.072), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.797), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.044), ('EU_a', 4.315), ('EU_b', 5.139), ('EU_ratio', 0.839657520918467), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 51)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.541), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.609), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.054), ('EU_a', 1.333), ('EU_b', 1.449), ('EU_ratio', 0.919944789510007), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 52)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.763), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.041), ('EU_a', 4.891), ('EU_b', 4.972), ('EU_ratio', 0.983708769106999), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 53)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.659), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.227), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.594), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.134), ('EU_a', 5.045), ('EU_b', 3.948), ('EU_ratio', 1.27786220871327), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 54)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.719), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.025), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.843), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.131), ('EU_a', 1.188), ('EU_b', 1.293), ('EU_ratio', 0.918793503480278), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 55)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.77), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.016), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.62), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.091), ('EU_a', 4.476), ('EU_b', 3.174), ('EU_ratio', 1.41020793950851), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 56)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.677), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.017), ('EU_a', 1.25), ('EU_b', 1.912), ('EU_ratio', 0.653765690376569), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 57)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.628), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.12), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.858), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.168), ('EU_a', 3.168), ('EU_b', 4.812), ('EU_ratio', 0.658354114713217), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 58)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.569), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.16), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.795), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.071), ('EU_a', 3.912), ('EU_b', 5.65), ('EU_ratio', 0.692389380530973), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 59)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.566), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.06), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.192), ('EU_a', 4.108), ('EU_b', 5.36), ('EU_ratio', 0.766417910447761), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 60)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.104), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.659), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.138), ('EU_a', 1.748), ('EU_b', 1.563), ('EU_ratio', 1.11836212412028), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 61)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.169), ('EU_a', 5.488), ('EU_b', 6.43), ('EU_ratio', 0.853499222395023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 62)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.79), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.244), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.672), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.117), ('EU_a', 1.882), ('EU_b', 0.963), ('EU_ratio', 1.95430944963655), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 63)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.047), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.808), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.221), ('EU_a', 1.376), ('EU_b', 0.732), ('EU_ratio', 1.87978142076503), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 64)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.571), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.261), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.878), ('EU_b', 4.486), ('EU_ratio', 1.08738296923763), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 65)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.738), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.722), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.13), ('EU_a', 1.227), ('EU_b', 1.184), ('EU_ratio', 1.03631756756757), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 66)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.711), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.536), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.139), ('EU_a', 4.673), ('EU_b', 4.149), ('EU_ratio', 1.12629549288985), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 67)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.845), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.869), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.068), ('EU_a', 3.218), ('EU_b', 3.068), ('EU_ratio', 1.04889178617992), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 68)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.807), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.051), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.744), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.03), ('EU_a', 7.611), ('EU_b', 7.14), ('EU_ratio', 1.06596638655462), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 69)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.556), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.715), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.105), ('EU_a', 3.046), ('EU_b', 3.555), ('EU_ratio', 0.856821378340366), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 70)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.606), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.036), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.577), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.105), ('EU_a', 5.202), ('EU_b', 4.878), ('EU_ratio', 1.06642066420664), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 71)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.611), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.627), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.127), ('EU_a', 5.04), ('EU_b', 4.373), ('EU_ratio', 1.15252686942602), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 72)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.756), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.103), ('EU_a', 4.597), ('EU_b', 4.777), ('EU_ratio', 0.962319447351894), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 73)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.693), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.031), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.708), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.18), ('EU_a', 1.169), ('EU_b', 1.056), ('EU_ratio', 1.10700757575758), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 74)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.671), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.229), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.764), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.262), ('EU_a', 3.126), ('EU_b', 3.558), ('EU_ratio', 0.87858347386172), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 75)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.794), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.2), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.837), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.018), ('EU_a', 5.352), ('EU_b', 6.516), ('EU_ratio', 0.821362799263352), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 76)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.741), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.198), ('EU_a', 6.469), ('EU_b', 4.941), ('EU_ratio', 1.30924913985023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 77)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.604), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.074), ('EU_a', 4.793), ('EU_b', 3.636), ('EU_ratio', 1.31820682068207), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 78)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.733), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.167), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.799), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.038), ('EU_a', 3.897), ('EU_b', 4.452), ('EU_ratio', 0.875336927223719), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 79)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.812), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.037), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.817), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.199), ('EU_a', 0.59), ('EU_b', 0.419), ('EU_ratio', 1.40811455847255), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 80)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.205), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 1.047), ('EU_b', 0.926), ('EU_ratio', 1.13066954643629), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 81)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.892), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.05), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.617), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.046), ('EU_a', 5.152), ('EU_b', 3.518), ('EU_ratio', 1.46446844798181), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 82)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.112), ('EU_a', 1.758), ('EU_b', 1.504), ('EU_ratio', 1.1688829787234), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 83)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.595), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.187), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.065), ('EU_a', 1.411), ('EU_b', 1.617), ('EU_ratio', 0.872603586889301), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 84)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.668), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.082), ('EU_a', 6.221), ('EU_b', 7.968), ('EU_ratio', 0.780747991967872), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 85)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.716), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.676), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.176), ('EU_a', 0.272), ('EU_b', 0.5), ('EU_ratio', 0.544), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 86)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.122), ('EU_a', 3.53), ('EU_b', 3.408), ('EU_ratio', 1.03579812206573), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 87)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.536), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.087), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.037), ('EU_a', 3.592), ('EU_b', 5.943), ('EU_ratio', 0.604408547871445), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 88)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.695), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.166), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.596), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 4.035), ('EU_b', 3.722), ('EU_ratio', 1.08409457281032), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 89)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.832), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.118), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.193), ('EU_a', 2.738), ('EU_b', 3.419), ('EU_ratio', 0.800818952910208), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 90)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.837), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.136), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.718), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.029), ('EU_a', 3.641), ('EU_b', 3.474), ('EU_ratio', 1.04807138744963), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 91)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.793), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.013), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.637), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 6.214), ('EU_b', 4.651), ('EU_ratio', 1.33605676198667), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 92)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.566), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.092), ('EU_a', 4.28), ('EU_b', 2.752), ('EU_ratio', 1.55523255813954), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 93)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.897), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.107), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.629), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.06), ('EU_a', 4.954), ('EU_b', 3.174), ('EU_ratio', 1.56080655324512), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 94)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.604), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.043), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.071), ('EU_a', 1.425), ('EU_b', 1.045), ('EU_ratio', 1.36363636363636), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 95)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.066), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.597), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.158), ('EU_a', 6.7), ('EU_b', 5.654), ('EU_ratio', 1.18500176865936), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 96)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.577), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.161), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.758), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.213), ('EU_a', 1.664), ('EU_b', 2.819), ('EU_ratio', 0.590280241220291), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 97)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.537), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.178), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.74), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.085), ('EU_a', 3.225), ('EU_b', 4.84), ('EU_ratio', 0.666322314049587), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 98)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.736), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.075), ('EU_a', 3.487), ('EU_b', 4.477), ('EU_ratio', 0.778869778869779), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 99)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.761), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.276), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.716), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.056), ('EU_a', 1.246), ('EU_b', 0.872), ('EU_ratio', 1.42889908256881), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 100)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/problem_set.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="sample_small_test" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip_instruct1"/>
    <Routine name="sampling"/>
    <Routine name="fix"/>
    <LoopTerminator name="sample_small_test"/>
    <Routine name="after_sampling_instructs"/>
    <LoopInitiator loopType="TrialHandler" name="sample_trial_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.777), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.785), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.052), ('EU_a', 2.049), ('EU_b', 2.251), ('EU_ratio', 0.910262105730786), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.88), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.114), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.733), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.178), ('EU_a', 1.304), ('EU_b', 1.11), ('EU_ratio', 1.17477477477477), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.68), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.251), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.614), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.051), ('EU_a', 5.189), ('EU_b', 4.504), ('EU_ratio', 1.15208703374778), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.564), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.07), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.092), ('EU_a', 1.272), ('EU_b', 2.154), ('EU_ratio', 0.590529247910863), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.905), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.709), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.205), ('EU_a', 7.553), ('EU_b', 6.176), ('EU_ratio', 1.22295984455959), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.057), ('EU_a', 1.547), ('EU_b', 2.04), ('EU_ratio', 0.758333333333333), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.851), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.865), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.14), ('EU_a', 6.688), ('EU_b', 5.8), ('EU_ratio', 1.15310344827586), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.545), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.067), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.694), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.026), ('EU_a', 1.032), ('EU_b', 1.822), ('EU_ratio', 0.566410537870472), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.665), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.68), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.028), ('EU_a', 3.78), ('EU_b', 3.912), ('EU_ratio', 0.966257668711657), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.921), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.226), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.73), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 8.063), ('EU_b', 6.125), ('EU_ratio', 1.31640816326531), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.644), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.914), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.14), ('EU_a', 0.504), ('EU_b', 0.494), ('EU_ratio', 1.02024291497976), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.688), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.122), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.024), ('EU_a', 0.888), ('EU_b', 1.172), ('EU_ratio', 0.757679180887372), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.635), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.157), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.611), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.092), ('EU_a', 5.565), ('EU_b', 5.558), ('EU_ratio', 1.00125944584383), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.511), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.049), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.778), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.054), ('EU_a', 0.777), ('EU_b', 1.124), ('EU_ratio', 0.691281138790035), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.675), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.775), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.176), ('EU_a', 1.245), ('EU_b', 0.846), ('EU_ratio', 1.47163120567376), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.836), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.703), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.185), ('EU_a', 6.548), ('EU_b', 4.514), ('EU_ratio', 1.45059813912273), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.922), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.062), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.563), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.056), ('EU_a', 0.364), ('EU_b', 0.227), ('EU_ratio', 1.60352422907489), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.584), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.015), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.658), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 3.953), ('EU_b', 4.39), ('EU_ratio', 0.900455580865604), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.804), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.064), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.889), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.163), ('EU_a', 3.7), ('EU_b', 3.956), ('EU_ratio', 0.935288169868554), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.648), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.541), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.029), ('EU_a', 4.478), ('EU_b', 3.497), ('EU_ratio', 1.28052616528453), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.696), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.189), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.643), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.223), ('EU_a', 1.203), ('EU_b', 1.063), ('EU_ratio', 1.13170272812794), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.642), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.213), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.902), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.042), ('EU_a', 6.207), ('EU_b', 8.684), ('EU_ratio', 0.714762782128052), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.828), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.033), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.104), ('EU_a', 5.631), ('EU_b', 5.462), ('EU_ratio', 1.03094104723544), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.666), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.054), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.827), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.087), ('EU_a', 0.846), ('EU_b', 1.393), ('EU_ratio', 0.607322325915291), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.825), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.881), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.199), ('EU_a', 1.27), ('EU_b', 1.563), ('EU_ratio', 0.812539987204095), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.215), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.8), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.188), ('EU_a', 4.73), ('EU_b', 6.212), ('EU_ratio', 0.761429491307147), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.517), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.085), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.835), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.072), ('EU_a', 1.99), ('EU_b', 3.527), ('EU_ratio', 0.564218882903317), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.9), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.786), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.181), ('EU_a', 7.08), ('EU_b', 5.745), ('EU_ratio', 1.23237597911227), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.676), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.218), ('EU_a', 4.5), ('EU_b', 3.779), ('EU_ratio', 1.19079121460704), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.784), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.208), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 4.496), ('EU_b', 3.632), ('EU_ratio', 1.23788546255507), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.769), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.091), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.681), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.219), ('EU_a', 3.481), ('EU_b', 2.091), ('EU_ratio', 1.66475370636059), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.132), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.782), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.036), ('EU_b', 3.77), ('EU_ratio', 1.07055702917772), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.896), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.117), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.137), ('EU_a', 4.674), ('EU_b', 2.895), ('EU_ratio', 1.61450777202073), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.944), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.135), ('EU_a', 3.302), ('EU_b', 5.663), ('EU_ratio', 0.583083171463888), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.575), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.724), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.183), ('EU_a', 1.585), ('EU_b', 1.257), ('EU_ratio', 1.26093874303898), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.791), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.019), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.631), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.019), ('EU_a', 2.974), ('EU_b', 2.353), ('EU_ratio', 1.26391840203995), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.796), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.108), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.838), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.2), ('EU_a', 4.128), ('EU_b', 3.628), ('EU_ratio', 1.13781697905182), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.08), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.779), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 5.8), ('EU_b', 5.782), ('EU_ratio', 1.00311310965064), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.752), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.146), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.037), ('EU_a', 6.33), ('EU_b', 5.32), ('EU_ratio', 1.18984962406015), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.674), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.101), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 6.538), ('EU_b', 6.24), ('EU_ratio', 1.04775641025641), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.097), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.666), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.02), ('EU_a', 3.994), ('EU_b', 4.522), ('EU_ratio', 0.883237505528527), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.561), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.199), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.824), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 5.212), ('EU_b', 7.636), ('EU_ratio', 0.682556312205343), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.767), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.03), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.871), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.117), ('EU_a', 2.858), ('EU_b', 2.665), ('EU_ratio', 1.07242026266417), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.766), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.635), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.136), ('EU_a', 1.2), ('EU_b', 0.862), ('EU_ratio', 1.39211136890951), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.609), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.164), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.691), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.081), ('EU_a', 4.099), ('EU_b', 4.675), ('EU_ratio', 0.876791443850267), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.747), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.791), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.031), ('EU_a', 1.114), ('EU_b', 1.365), ('EU_ratio', 0.816117216117216), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.654), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.193), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.58), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.248), ('EU_a', 3.538), ('EU_b', 3.232), ('EU_ratio', 1.09467821782178), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.754), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.088), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.833), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.235), ('EU_a', 2.312), ('EU_b', 2.392), ('EU_ratio', 0.966555183946488), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.072), ('EU_a', 6.433), ('EU_b', 8.67), ('EU_ratio', 0.741983852364475), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.697), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.026), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.667), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.119), ('EU_a', 1.186), ('EU_b', 1.215), ('EU_ratio', 0.976131687242798), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.709), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.072), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.797), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.044), ('EU_a', 4.315), ('EU_b', 5.139), ('EU_ratio', 0.839657520918467), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.541), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.609), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.054), ('EU_a', 1.333), ('EU_b', 1.449), ('EU_ratio', 0.919944789510007), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.763), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.041), ('EU_a', 4.891), ('EU_b', 4.972), ('EU_ratio', 0.983708769106999), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.659), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.227), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.594), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.134), ('EU_a', 5.045), ('EU_b', 3.948), ('EU_ratio', 1.27786220871327), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.719), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.025), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.843), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.131), ('EU_a', 1.188), ('EU_b', 1.293), ('EU_ratio', 0.918793503480278), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.77), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.016), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.62), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.091), ('EU_a', 4.476), ('EU_b', 3.174), ('EU_ratio', 1.41020793950851), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.677), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.017), ('EU_a', 1.25), ('EU_b', 1.912), ('EU_ratio', 0.653765690376569), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.628), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.12), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.858), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.168), ('EU_a', 3.168), ('EU_b', 4.812), ('EU_ratio', 0.658354114713217), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.569), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.16), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.795), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.071), ('EU_a', 3.912), ('EU_b', 5.65), ('EU_ratio', 0.692389380530973), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.566), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.06), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.192), ('EU_a', 4.108), ('EU_b', 5.36), ('EU_ratio', 0.766417910447761), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.104), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.659), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.138), ('EU_a', 1.748), ('EU_b', 1.563), ('EU_ratio', 1.11836212412028), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.169), ('EU_a', 5.488), ('EU_b', 6.43), ('EU_ratio', 0.853499222395023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.79), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.244), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.672), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.117), ('EU_a', 1.882), ('EU_b', 0.963), ('EU_ratio', 1.95430944963655), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.047), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.808), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.221), ('EU_a', 1.376), ('EU_b', 0.732), ('EU_ratio', 1.87978142076503), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.571), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.261), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.878), ('EU_b', 4.486), ('EU_ratio', 1.08738296923763), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.738), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.722), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.13), ('EU_a', 1.227), ('EU_b', 1.184), ('EU_ratio', 1.03631756756757), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.711), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.536), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.139), ('EU_a', 4.673), ('EU_b', 4.149), ('EU_ratio', 1.12629549288985), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.845), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.869), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.068), ('EU_a', 3.218), ('EU_b', 3.068), ('EU_ratio', 1.04889178617992), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.807), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.051), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.744), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.03), ('EU_a', 7.611), ('EU_b', 7.14), ('EU_ratio', 1.06596638655462), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.556), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.715), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.105), ('EU_a', 3.046), ('EU_b', 3.555), ('EU_ratio', 0.856821378340366), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.606), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.036), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.577), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.105), ('EU_a', 5.202), ('EU_b', 4.878), ('EU_ratio', 1.06642066420664), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.611), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.627), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.127), ('EU_a', 5.04), ('EU_b', 4.373), ('EU_ratio', 1.15252686942602), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.756), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.103), ('EU_a', 4.597), ('EU_b', 4.777), ('EU_ratio', 0.962319447351894), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.693), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.031), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.708), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.18), ('EU_a', 1.169), ('EU_b', 1.056), ('EU_ratio', 1.10700757575758), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.671), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.229), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.764), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.262), ('EU_a', 3.126), ('EU_b', 3.558), ('EU_ratio', 0.87858347386172), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.794), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.2), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.837), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.018), ('EU_a', 5.352), ('EU_b', 6.516), ('EU_ratio', 0.821362799263352), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.741), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.198), ('EU_a', 6.469), ('EU_b', 4.941), ('EU_ratio', 1.30924913985023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.604), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.074), ('EU_a', 4.793), ('EU_b', 3.636), ('EU_ratio', 1.31820682068207), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.733), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.167), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.799), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.038), ('EU_a', 3.897), ('EU_b', 4.452), ('EU_ratio', 0.875336927223719), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.812), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.037), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.817), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.199), ('EU_a', 0.59), ('EU_b', 0.419), ('EU_ratio', 1.40811455847255), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.205), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 1.047), ('EU_b', 0.926), ('EU_ratio', 1.13066954643629), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.892), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.05), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.617), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.046), ('EU_a', 5.152), ('EU_b', 3.518), ('EU_ratio', 1.46446844798181), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.112), ('EU_a', 1.758), ('EU_b', 1.504), ('EU_ratio', 1.1688829787234), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.595), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.187), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.065), ('EU_a', 1.411), ('EU_b', 1.617), ('EU_ratio', 0.872603586889301), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.668), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.082), ('EU_a', 6.221), ('EU_b', 7.968), ('EU_ratio', 0.780747991967872), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.716), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.676), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.176), ('EU_a', 0.272), ('EU_b', 0.5), ('EU_ratio', 0.544), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.122), ('EU_a', 3.53), ('EU_b', 3.408), ('EU_ratio', 1.03579812206573), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.536), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.087), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.037), ('EU_a', 3.592), ('EU_b', 5.943), ('EU_ratio', 0.604408547871445), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.695), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.166), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.596), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 4.035), ('EU_b', 3.722), ('EU_ratio', 1.08409457281032), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.832), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.118), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.193), ('EU_a', 2.738), ('EU_b', 3.419), ('EU_ratio', 0.800818952910208), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.837), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.136), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.718), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.029), ('EU_a', 3.641), ('EU_b', 3.474), ('EU_ratio', 1.04807138744963), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.793), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.013), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.637), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 6.214), ('EU_b', 4.651), ('EU_ratio', 1.33605676198667), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.566), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.092), ('EU_a', 4.28), ('EU_b', 2.752), ('EU_ratio', 1.55523255813954), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.897), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.107), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.629), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.06), ('EU_a', 4.954), ('EU_b', 3.174), ('EU_ratio', 1.56080655324512), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.604), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.043), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.071), ('EU_a', 1.425), ('EU_b', 1.045), ('EU_ratio', 1.36363636363636), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.066), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.597), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.158), ('EU_a', 6.7), ('EU_b', 5.654), ('EU_ratio', 1.18500176865936), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.577), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.161), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.758), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.213), ('EU_a', 1.664), ('EU_b', 2.819), ('EU_ratio', 0.590280241220291), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.537), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.178), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.74), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.085), ('EU_a', 3.225), ('EU_b', 4.84), ('EU_ratio', 0.666322314049587), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.736), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.075), ('EU_a', 3.487), ('EU_b', 4.477), ('EU_ratio', 0.778869778869779), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.761), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.276), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.716), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.056), ('EU_a', 1.246), ('EU_b', 0.872), ('EU_ratio', 1.42889908256881), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/problem_set.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="sample_trial_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip1"/>
    <Routine name="sampling"/>
    <Routine name="fix"/>
    <LoopTerminator name="sample_trial_loop"/>
    <Routine name="first_task_done_a"/>
    <LoopInitiator loopType="TrialHandler" name="description_instr_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ipic', 'instruct/instruct_description1.png')]), OrderedDict([('ipic', 'instruct/instruct_description2.png')]), OrderedDict([('ipic', 'instruct/instruct_description3.png')]), OrderedDict([('ipic', 'instruct/instruct_description4.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/description_instructions.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="description_instr_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="instruction_description"/>
    <LoopTerminator name="description_instr_loop"/>
    <LoopInitiator loopType="TrialHandler" name="descr_trial_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.777), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.785), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.052), ('EU_a', 2.049), ('EU_b', 2.251), ('EU_ratio', 0.910262105730786), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 1)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.88), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.114), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.733), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.178), ('EU_a', 1.304), ('EU_b', 1.11), ('EU_ratio', 1.17477477477477), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 2)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.68), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.251), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.614), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.051), ('EU_a', 5.189), ('EU_b', 4.504), ('EU_ratio', 1.15208703374778), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 3)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.564), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.07), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.092), ('EU_a', 1.272), ('EU_b', 2.154), ('EU_ratio', 0.590529247910863), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 4)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.905), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.709), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.205), ('EU_a', 7.553), ('EU_b', 6.176), ('EU_ratio', 1.22295984455959), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 5)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.057), ('EU_a', 1.547), ('EU_b', 2.04), ('EU_ratio', 0.758333333333333), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 6)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.851), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.865), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.14), ('EU_a', 6.688), ('EU_b', 5.8), ('EU_ratio', 1.15310344827586), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 7)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.545), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.067), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.694), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.026), ('EU_a', 1.032), ('EU_b', 1.822), ('EU_ratio', 0.566410537870472), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 8)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.665), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.68), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.028), ('EU_a', 3.78), ('EU_b', 3.912), ('EU_ratio', 0.966257668711657), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 9)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.921), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.226), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.73), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 8.063), ('EU_b', 6.125), ('EU_ratio', 1.31640816326531), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 10)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.644), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.914), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.14), ('EU_a', 0.504), ('EU_b', 0.494), ('EU_ratio', 1.02024291497976), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 11)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.688), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.122), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.024), ('EU_a', 0.888), ('EU_b', 1.172), ('EU_ratio', 0.757679180887372), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 12)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.635), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.157), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.611), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.092), ('EU_a', 5.565), ('EU_b', 5.558), ('EU_ratio', 1.00125944584383), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 13)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.511), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.049), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.778), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.054), ('EU_a', 0.777), ('EU_b', 1.124), ('EU_ratio', 0.691281138790035), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 14)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.675), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.775), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.176), ('EU_a', 1.245), ('EU_b', 0.846), ('EU_ratio', 1.47163120567376), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 15)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.836), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.703), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.185), ('EU_a', 6.548), ('EU_b', 4.514), ('EU_ratio', 1.45059813912273), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 16)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.922), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.062), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.563), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.056), ('EU_a', 0.364), ('EU_b', 0.227), ('EU_ratio', 1.60352422907489), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 17)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.584), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.015), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.658), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 3.953), ('EU_b', 4.39), ('EU_ratio', 0.900455580865604), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 18)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.804), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.064), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.889), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.163), ('EU_a', 3.7), ('EU_b', 3.956), ('EU_ratio', 0.935288169868554), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 19)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.648), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.541), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.029), ('EU_a', 4.478), ('EU_b', 3.497), ('EU_ratio', 1.28052616528453), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 20)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.696), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.189), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.643), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.223), ('EU_a', 1.203), ('EU_b', 1.063), ('EU_ratio', 1.13170272812794), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 21)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.642), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.213), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.902), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.042), ('EU_a', 6.207), ('EU_b', 8.684), ('EU_ratio', 0.714762782128052), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 22)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.828), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.033), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.104), ('EU_a', 5.631), ('EU_b', 5.462), ('EU_ratio', 1.03094104723544), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 23)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.666), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.054), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.827), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.087), ('EU_a', 0.846), ('EU_b', 1.393), ('EU_ratio', 0.607322325915291), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 24)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.825), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.881), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.199), ('EU_a', 1.27), ('EU_b', 1.563), ('EU_ratio', 0.812539987204095), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 25)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.215), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.8), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.188), ('EU_a', 4.73), ('EU_b', 6.212), ('EU_ratio', 0.761429491307147), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 26)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.517), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.085), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.835), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.072), ('EU_a', 1.99), ('EU_b', 3.527), ('EU_ratio', 0.564218882903317), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 27)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.9), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.786), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.181), ('EU_a', 7.08), ('EU_b', 5.745), ('EU_ratio', 1.23237597911227), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 28)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.676), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.218), ('EU_a', 4.5), ('EU_b', 3.779), ('EU_ratio', 1.19079121460704), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 29)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.784), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.208), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 4.496), ('EU_b', 3.632), ('EU_ratio', 1.23788546255507), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 30)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.769), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.091), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.681), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.219), ('EU_a', 3.481), ('EU_b', 2.091), ('EU_ratio', 1.66475370636059), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 31)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.132), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.782), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.036), ('EU_b', 3.77), ('EU_ratio', 1.07055702917772), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 32)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.896), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.117), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.137), ('EU_a', 4.674), ('EU_b', 2.895), ('EU_ratio', 1.61450777202073), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 33)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.944), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.135), ('EU_a', 3.302), ('EU_b', 5.663), ('EU_ratio', 0.583083171463888), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 34)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.575), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.724), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.183), ('EU_a', 1.585), ('EU_b', 1.257), ('EU_ratio', 1.26093874303898), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 35)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.791), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.019), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.631), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.019), ('EU_a', 2.974), ('EU_b', 2.353), ('EU_ratio', 1.26391840203995), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 36)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.796), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.108), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.838), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.2), ('EU_a', 4.128), ('EU_b', 3.628), ('EU_ratio', 1.13781697905182), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 37)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.08), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.779), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 5.8), ('EU_b', 5.782), ('EU_ratio', 1.00311310965064), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 38)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.752), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.146), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.037), ('EU_a', 6.33), ('EU_b', 5.32), ('EU_ratio', 1.18984962406015), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 39)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.674), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.101), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 6.538), ('EU_b', 6.24), ('EU_ratio', 1.04775641025641), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 40)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.097), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.666), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.02), ('EU_a', 3.994), ('EU_b', 4.522), ('EU_ratio', 0.883237505528527), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 41)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.561), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.199), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.824), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 5.212), ('EU_b', 7.636), ('EU_ratio', 0.682556312205343), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 42)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.767), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.03), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.871), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.117), ('EU_a', 2.858), ('EU_b', 2.665), ('EU_ratio', 1.07242026266417), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 43)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.766), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.635), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.136), ('EU_a', 1.2), ('EU_b', 0.862), ('EU_ratio', 1.39211136890951), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 44)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.609), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.164), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.691), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.081), ('EU_a', 4.099), ('EU_b', 4.675), ('EU_ratio', 0.876791443850267), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 45)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.747), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.791), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.031), ('EU_a', 1.114), ('EU_b', 1.365), ('EU_ratio', 0.816117216117216), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 46)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.654), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.193), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.58), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.248), ('EU_a', 3.538), ('EU_b', 3.232), ('EU_ratio', 1.09467821782178), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 47)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.754), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.088), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.833), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.235), ('EU_a', 2.312), ('EU_b', 2.392), ('EU_ratio', 0.966555183946488), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 48)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.072), ('EU_a', 6.433), ('EU_b', 8.67), ('EU_ratio', 0.741983852364475), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 49)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.697), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.026), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.667), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.119), ('EU_a', 1.186), ('EU_b', 1.215), ('EU_ratio', 0.976131687242798), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 50)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.709), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.072), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.797), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.044), ('EU_a', 4.315), ('EU_b', 5.139), ('EU_ratio', 0.839657520918467), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 51)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.541), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.609), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.054), ('EU_a', 1.333), ('EU_b', 1.449), ('EU_ratio', 0.919944789510007), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 52)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.763), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.041), ('EU_a', 4.891), ('EU_b', 4.972), ('EU_ratio', 0.983708769106999), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 53)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.659), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.227), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.594), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.134), ('EU_a', 5.045), ('EU_b', 3.948), ('EU_ratio', 1.27786220871327), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 54)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.719), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.025), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.843), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.131), ('EU_a', 1.188), ('EU_b', 1.293), ('EU_ratio', 0.918793503480278), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 55)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.77), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.016), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.62), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.091), ('EU_a', 4.476), ('EU_b', 3.174), ('EU_ratio', 1.41020793950851), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 56)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.677), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.017), ('EU_a', 1.25), ('EU_b', 1.912), ('EU_ratio', 0.653765690376569), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 57)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.628), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.12), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.858), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.168), ('EU_a', 3.168), ('EU_b', 4.812), ('EU_ratio', 0.658354114713217), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 58)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.569), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.16), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.795), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.071), ('EU_a', 3.912), ('EU_b', 5.65), ('EU_ratio', 0.692389380530973), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 59)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.566), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.06), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.192), ('EU_a', 4.108), ('EU_b', 5.36), ('EU_ratio', 0.766417910447761), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 60)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.104), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.659), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.138), ('EU_a', 1.748), ('EU_b', 1.563), ('EU_ratio', 1.11836212412028), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 61)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.169), ('EU_a', 5.488), ('EU_b', 6.43), ('EU_ratio', 0.853499222395023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 62)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.79), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.244), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.672), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.117), ('EU_a', 1.882), ('EU_b', 0.963), ('EU_ratio', 1.95430944963655), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 63)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.047), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.808), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.221), ('EU_a', 1.376), ('EU_b', 0.732), ('EU_ratio', 1.87978142076503), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 64)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.571), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.261), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.878), ('EU_b', 4.486), ('EU_ratio', 1.08738296923763), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 65)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.738), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.722), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.13), ('EU_a', 1.227), ('EU_b', 1.184), ('EU_ratio', 1.03631756756757), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 66)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.711), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.536), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.139), ('EU_a', 4.673), ('EU_b', 4.149), ('EU_ratio', 1.12629549288985), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 67)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.845), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.869), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.068), ('EU_a', 3.218), ('EU_b', 3.068), ('EU_ratio', 1.04889178617992), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 68)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.807), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.051), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.744), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.03), ('EU_a', 7.611), ('EU_b', 7.14), ('EU_ratio', 1.06596638655462), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 69)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.556), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.715), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.105), ('EU_a', 3.046), ('EU_b', 3.555), ('EU_ratio', 0.856821378340366), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 70)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.606), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.036), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.577), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.105), ('EU_a', 5.202), ('EU_b', 4.878), ('EU_ratio', 1.06642066420664), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 71)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.611), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.627), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.127), ('EU_a', 5.04), ('EU_b', 4.373), ('EU_ratio', 1.15252686942602), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 72)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.756), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.103), ('EU_a', 4.597), ('EU_b', 4.777), ('EU_ratio', 0.962319447351894), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 73)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.693), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.031), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.708), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.18), ('EU_a', 1.169), ('EU_b', 1.056), ('EU_ratio', 1.10700757575758), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 74)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.671), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.229), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.764), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.262), ('EU_a', 3.126), ('EU_b', 3.558), ('EU_ratio', 0.87858347386172), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 75)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.794), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.2), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.837), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.018), ('EU_a', 5.352), ('EU_b', 6.516), ('EU_ratio', 0.821362799263352), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 76)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.741), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.198), ('EU_a', 6.469), ('EU_b', 4.941), ('EU_ratio', 1.30924913985023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 77)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.604), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.074), ('EU_a', 4.793), ('EU_b', 3.636), ('EU_ratio', 1.31820682068207), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 78)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.733), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.167), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.799), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.038), ('EU_a', 3.897), ('EU_b', 4.452), ('EU_ratio', 0.875336927223719), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 79)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.812), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.037), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.817), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.199), ('EU_a', 0.59), ('EU_b', 0.419), ('EU_ratio', 1.40811455847255), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 80)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.205), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 1.047), ('EU_b', 0.926), ('EU_ratio', 1.13066954643629), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 81)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.892), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.05), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.617), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.046), ('EU_a', 5.152), ('EU_b', 3.518), ('EU_ratio', 1.46446844798181), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 82)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.112), ('EU_a', 1.758), ('EU_b', 1.504), ('EU_ratio', 1.1688829787234), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 83)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.595), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.187), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.065), ('EU_a', 1.411), ('EU_b', 1.617), ('EU_ratio', 0.872603586889301), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 84)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.668), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.082), ('EU_a', 6.221), ('EU_b', 7.968), ('EU_ratio', 0.780747991967872), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 85)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.716), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.676), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.176), ('EU_a', 0.272), ('EU_b', 0.5), ('EU_ratio', 0.544), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 86)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.122), ('EU_a', 3.53), ('EU_b', 3.408), ('EU_ratio', 1.03579812206573), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 87)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.536), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.087), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.037), ('EU_a', 3.592), ('EU_b', 5.943), ('EU_ratio', 0.604408547871445), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 88)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.695), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.166), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.596), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 4.035), ('EU_b', 3.722), ('EU_ratio', 1.08409457281032), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 89)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.832), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.118), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.193), ('EU_a', 2.738), ('EU_b', 3.419), ('EU_ratio', 0.800818952910208), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 90)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.837), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.136), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.718), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.029), ('EU_a', 3.641), ('EU_b', 3.474), ('EU_ratio', 1.04807138744963), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 91)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.793), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.013), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.637), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 6.214), ('EU_b', 4.651), ('EU_ratio', 1.33605676198667), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 92)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.566), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.092), ('EU_a', 4.28), ('EU_b', 2.752), ('EU_ratio', 1.55523255813954), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 93)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.897), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.107), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.629), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.06), ('EU_a', 4.954), ('EU_b', 3.174), ('EU_ratio', 1.56080655324512), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 94)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.604), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.043), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.071), ('EU_a', 1.425), ('EU_b', 1.045), ('EU_ratio', 1.36363636363636), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 95)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.066), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.597), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.158), ('EU_a', 6.7), ('EU_b', 5.654), ('EU_ratio', 1.18500176865936), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 96)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.577), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.161), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.758), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.213), ('EU_a', 1.664), ('EU_b', 2.819), ('EU_ratio', 0.590280241220291), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 97)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.537), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.178), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.74), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.085), ('EU_a', 3.225), ('EU_b', 4.84), ('EU_ratio', 0.666322314049587), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 98)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.736), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.075), ('EU_a', 3.487), ('EU_b', 4.477), ('EU_ratio', 0.778869778869779), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 99)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.761), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.276), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.716), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.056), ('EU_a', 1.246), ('EU_b', 0.872), ('EU_ratio', 1.42889908256881), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 100)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/problem_set.csv" valType="str"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="code"/>
      <Param name="name" updates="None" val="descr_trial_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="choose"/>
    <Routine name="fix"/>
    <LoopTerminator name="descr_trial_loop"/>
    <Routine name="fix"/>
    <Routine name="first_task_done_b"/>
    <Routine name="skip_second_sampling"/>
    <LoopInitiator loopType="TrialHandler" name="instruct_sampling2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('ipic', 'instruct/instruct_sampling1.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling2.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling3.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling4.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling5.png')]), OrderedDict([('ipic', 'instruct/instruct_sampling6.png')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/sampling_instructions.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="False" valType="bool"/>
      <Param name="loopType" updates="None" val="sequential" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="instruct_sampling2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip_instruct2"/>
    <Routine name="sampling_instructions"/>
    <LoopTerminator name="instruct_sampling2"/>
    <Routine name="interactive_sampl_1"/>
    <LoopInitiator loopType="TrialHandler" name="instruct_sample_loop_2">
      <Param name="Selected rows" updates="None" val="1:3" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.777), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.785), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.052), ('EU_a', 2.049), ('EU_b', 2.251), ('EU_ratio', 0.910262105730786), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 1)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.88), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.114), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.733), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.178), ('EU_a', 1.304), ('EU_b', 1.11), ('EU_ratio', 1.17477477477477), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 2)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.68), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.251), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.614), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.051), ('EU_a', 5.189), ('EU_b', 4.504), ('EU_ratio', 1.15208703374778), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 3)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.564), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.07), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.092), ('EU_a', 1.272), ('EU_b', 2.154), ('EU_ratio', 0.590529247910863), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 4)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.905), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.709), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.205), ('EU_a', 7.553), ('EU_b', 6.176), ('EU_ratio', 1.22295984455959), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 5)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.057), ('EU_a', 1.547), ('EU_b', 2.04), ('EU_ratio', 0.758333333333333), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 6)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.851), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.865), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.14), ('EU_a', 6.688), ('EU_b', 5.8), ('EU_ratio', 1.15310344827586), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 7)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.545), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.067), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.694), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.026), ('EU_a', 1.032), ('EU_b', 1.822), ('EU_ratio', 0.566410537870472), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 8)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.665), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.68), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.028), ('EU_a', 3.78), ('EU_b', 3.912), ('EU_ratio', 0.966257668711657), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 9)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.921), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.226), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.73), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 8.063), ('EU_b', 6.125), ('EU_ratio', 1.31640816326531), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 10)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.644), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.914), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.14), ('EU_a', 0.504), ('EU_b', 0.494), ('EU_ratio', 1.02024291497976), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 11)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.688), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.122), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.024), ('EU_a', 0.888), ('EU_b', 1.172), ('EU_ratio', 0.757679180887372), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 12)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.635), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.157), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.611), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.092), ('EU_a', 5.565), ('EU_b', 5.558), ('EU_ratio', 1.00125944584383), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 13)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.511), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.049), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.778), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.054), ('EU_a', 0.777), ('EU_b', 1.124), ('EU_ratio', 0.691281138790035), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 14)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.675), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.775), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.176), ('EU_a', 1.245), ('EU_b', 0.846), ('EU_ratio', 1.47163120567376), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 15)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.836), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.703), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.185), ('EU_a', 6.548), ('EU_b', 4.514), ('EU_ratio', 1.45059813912273), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 16)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.922), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.062), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.563), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.056), ('EU_a', 0.364), ('EU_b', 0.227), ('EU_ratio', 1.60352422907489), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 17)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.584), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.015), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.658), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 3.953), ('EU_b', 4.39), ('EU_ratio', 0.900455580865604), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 18)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.804), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.064), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.889), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.163), ('EU_a', 3.7), ('EU_b', 3.956), ('EU_ratio', 0.935288169868554), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 19)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.648), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.541), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.029), ('EU_a', 4.478), ('EU_b', 3.497), ('EU_ratio', 1.28052616528453), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 20)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.696), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.189), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.643), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.223), ('EU_a', 1.203), ('EU_b', 1.063), ('EU_ratio', 1.13170272812794), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 21)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.642), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.213), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.902), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.042), ('EU_a', 6.207), ('EU_b', 8.684), ('EU_ratio', 0.714762782128052), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 22)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.828), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.033), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.104), ('EU_a', 5.631), ('EU_b', 5.462), ('EU_ratio', 1.03094104723544), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 23)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.666), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.054), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.827), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.087), ('EU_a', 0.846), ('EU_b', 1.393), ('EU_ratio', 0.607322325915291), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 24)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.825), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.881), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.199), ('EU_a', 1.27), ('EU_b', 1.563), ('EU_ratio', 0.812539987204095), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 25)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.215), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.8), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.188), ('EU_a', 4.73), ('EU_b', 6.212), ('EU_ratio', 0.761429491307147), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 26)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.517), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.085), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.835), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.072), ('EU_a', 1.99), ('EU_b', 3.527), ('EU_ratio', 0.564218882903317), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 27)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.9), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.786), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.181), ('EU_a', 7.08), ('EU_b', 5.745), ('EU_ratio', 1.23237597911227), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 28)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.676), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.218), ('EU_a', 4.5), ('EU_b', 3.779), ('EU_ratio', 1.19079121460704), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 29)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.784), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.208), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 4.496), ('EU_b', 3.632), ('EU_ratio', 1.23788546255507), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 30)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.769), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.091), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.681), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.219), ('EU_a', 3.481), ('EU_b', 2.091), ('EU_ratio', 1.66475370636059), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 31)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.132), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.782), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.036), ('EU_b', 3.77), ('EU_ratio', 1.07055702917772), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 32)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.896), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.117), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.137), ('EU_a', 4.674), ('EU_b', 2.895), ('EU_ratio', 1.61450777202073), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 33)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.944), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.135), ('EU_a', 3.302), ('EU_b', 5.663), ('EU_ratio', 0.583083171463888), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 34)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.575), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.724), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.183), ('EU_a', 1.585), ('EU_b', 1.257), ('EU_ratio', 1.26093874303898), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 35)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.791), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.019), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.631), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.019), ('EU_a', 2.974), ('EU_b', 2.353), ('EU_ratio', 1.26391840203995), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 36)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.796), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.108), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.838), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.2), ('EU_a', 4.128), ('EU_b', 3.628), ('EU_ratio', 1.13781697905182), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 37)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.08), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.779), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 5.8), ('EU_b', 5.782), ('EU_ratio', 1.00311310965064), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 38)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.752), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.146), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.037), ('EU_a', 6.33), ('EU_b', 5.32), ('EU_ratio', 1.18984962406015), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 39)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.674), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.101), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 6.538), ('EU_b', 6.24), ('EU_ratio', 1.04775641025641), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 40)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.097), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.666), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.02), ('EU_a', 3.994), ('EU_b', 4.522), ('EU_ratio', 0.883237505528527), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 41)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.561), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.199), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.824), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 5.212), ('EU_b', 7.636), ('EU_ratio', 0.682556312205343), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 42)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.767), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.03), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.871), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.117), ('EU_a', 2.858), ('EU_b', 2.665), ('EU_ratio', 1.07242026266417), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 43)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.766), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.635), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.136), ('EU_a', 1.2), ('EU_b', 0.862), ('EU_ratio', 1.39211136890951), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 44)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.609), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.164), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.691), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.081), ('EU_a', 4.099), ('EU_b', 4.675), ('EU_ratio', 0.876791443850267), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 45)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.747), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.791), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.031), ('EU_a', 1.114), ('EU_b', 1.365), ('EU_ratio', 0.816117216117216), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 46)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.654), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.193), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.58), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.248), ('EU_a', 3.538), ('EU_b', 3.232), ('EU_ratio', 1.09467821782178), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 47)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.754), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.088), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.833), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.235), ('EU_a', 2.312), ('EU_b', 2.392), ('EU_ratio', 0.966555183946488), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 48)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.072), ('EU_a', 6.433), ('EU_b', 8.67), ('EU_ratio', 0.741983852364475), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 49)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.697), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.026), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.667), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.119), ('EU_a', 1.186), ('EU_b', 1.215), ('EU_ratio', 0.976131687242798), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 50)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.709), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.072), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.797), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.044), ('EU_a', 4.315), ('EU_b', 5.139), ('EU_ratio', 0.839657520918467), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 51)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.541), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.609), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.054), ('EU_a', 1.333), ('EU_b', 1.449), ('EU_ratio', 0.919944789510007), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 52)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.763), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.041), ('EU_a', 4.891), ('EU_b', 4.972), ('EU_ratio', 0.983708769106999), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 53)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.659), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.227), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.594), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.134), ('EU_a', 5.045), ('EU_b', 3.948), ('EU_ratio', 1.27786220871327), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 54)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.719), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.025), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.843), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.131), ('EU_a', 1.188), ('EU_b', 1.293), ('EU_ratio', 0.918793503480278), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 55)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.77), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.016), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.62), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.091), ('EU_a', 4.476), ('EU_b', 3.174), ('EU_ratio', 1.41020793950851), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 56)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.677), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.017), ('EU_a', 1.25), ('EU_b', 1.912), ('EU_ratio', 0.653765690376569), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 57)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.628), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.12), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.858), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.168), ('EU_a', 3.168), ('EU_b', 4.812), ('EU_ratio', 0.658354114713217), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 58)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.569), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.16), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.795), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.071), ('EU_a', 3.912), ('EU_b', 5.65), ('EU_ratio', 0.692389380530973), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 59)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.566), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.06), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.192), ('EU_a', 4.108), ('EU_b', 5.36), ('EU_ratio', 0.766417910447761), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 60)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.104), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.659), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.138), ('EU_a', 1.748), ('EU_b', 1.563), ('EU_ratio', 1.11836212412028), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 61)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.169), ('EU_a', 5.488), ('EU_b', 6.43), ('EU_ratio', 0.853499222395023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 62)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.79), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.244), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.672), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.117), ('EU_a', 1.882), ('EU_b', 0.963), ('EU_ratio', 1.95430944963655), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 63)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.047), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.808), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.221), ('EU_a', 1.376), ('EU_b', 0.732), ('EU_ratio', 1.87978142076503), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 64)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.571), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.261), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.878), ('EU_b', 4.486), ('EU_ratio', 1.08738296923763), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 65)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.738), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.722), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.13), ('EU_a', 1.227), ('EU_b', 1.184), ('EU_ratio', 1.03631756756757), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 66)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.711), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.536), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.139), ('EU_a', 4.673), ('EU_b', 4.149), ('EU_ratio', 1.12629549288985), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 67)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.845), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.869), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.068), ('EU_a', 3.218), ('EU_b', 3.068), ('EU_ratio', 1.04889178617992), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 68)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.807), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.051), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.744), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.03), ('EU_a', 7.611), ('EU_b', 7.14), ('EU_ratio', 1.06596638655462), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 69)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.556), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.715), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.105), ('EU_a', 3.046), ('EU_b', 3.555), ('EU_ratio', 0.856821378340366), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 70)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.606), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.036), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.577), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.105), ('EU_a', 5.202), ('EU_b', 4.878), ('EU_ratio', 1.06642066420664), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 71)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.611), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.627), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.127), ('EU_a', 5.04), ('EU_b', 4.373), ('EU_ratio', 1.15252686942602), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 72)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.756), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.103), ('EU_a', 4.597), ('EU_b', 4.777), ('EU_ratio', 0.962319447351894), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 73)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.693), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.031), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.708), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.18), ('EU_a', 1.169), ('EU_b', 1.056), ('EU_ratio', 1.10700757575758), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 74)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.671), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.229), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.764), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.262), ('EU_a', 3.126), ('EU_b', 3.558), ('EU_ratio', 0.87858347386172), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 75)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.794), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.2), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.837), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.018), ('EU_a', 5.352), ('EU_b', 6.516), ('EU_ratio', 0.821362799263352), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 76)]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.741), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.198), ('EU_a', 6.469), ('EU_b', 4.941), ('EU_ratio', 1.30924913985023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain'), ('id_of_problem', 77)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.604), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.074), ('EU_a', 4.793), ('EU_b', 3.636), ('EU_ratio', 1.31820682068207), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 78)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.733), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.167), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.799), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.038), ('EU_a', 3.897), ('EU_b', 4.452), ('EU_ratio', 0.875336927223719), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 79)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.812), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.037), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.817), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.199), ('EU_a', 0.59), ('EU_b', 0.419), ('EU_ratio', 1.40811455847255), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 80)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.205), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 1.047), ('EU_b', 0.926), ('EU_ratio', 1.13066954643629), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 81)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.892), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.05), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.617), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.046), ('EU_a', 5.152), ('EU_b', 3.518), ('EU_ratio', 1.46446844798181), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 82)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.112), ('EU_a', 1.758), ('EU_b', 1.504), ('EU_ratio', 1.1688829787234), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 83)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.595), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.187), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.065), ('EU_a', 1.411), ('EU_b', 1.617), ('EU_ratio', 0.872603586889301), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 84)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.668), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.082), ('EU_a', 6.221), ('EU_b', 7.968), ('EU_ratio', 0.780747991967872), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 85)]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.716), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.676), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.176), ('EU_a', 0.272), ('EU_b', 0.5), ('EU_ratio', 0.544), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat'), ('id_of_problem', 86)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.122), ('EU_a', 3.53), ('EU_b', 3.408), ('EU_ratio', 1.03579812206573), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 87)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.536), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.087), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.037), ('EU_a', 3.592), ('EU_b', 5.943), ('EU_ratio', 0.604408547871445), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 88)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.695), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.166), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.596), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 4.035), ('EU_b', 3.722), ('EU_ratio', 1.08409457281032), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 89)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.832), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.118), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.193), ('EU_a', 2.738), ('EU_b', 3.419), ('EU_ratio', 0.800818952910208), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 90)]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.837), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.136), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.718), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.029), ('EU_a', 3.641), ('EU_b', 3.474), ('EU_ratio', 1.04807138744963), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat'), ('id_of_problem', 91)]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.793), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.013), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.637), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 6.214), ('EU_b', 4.651), ('EU_ratio', 1.33605676198667), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat'), ('id_of_problem', 92)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.566), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.092), ('EU_a', 4.28), ('EU_b', 2.752), ('EU_ratio', 1.55523255813954), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 93)]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.897), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.107), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.629), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.06), ('EU_a', 4.954), ('EU_b', 3.174), ('EU_ratio', 1.56080655324512), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain'), ('id_of_problem', 94)]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.604), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.043), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.071), ('EU_a', 1.425), ('EU_b', 1.045), ('EU_ratio', 1.36363636363636), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache'), ('id_of_problem', 95)]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.066), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.597), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.158), ('EU_a', 6.7), ('EU_b', 5.654), ('EU_ratio', 1.18500176865936), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache'), ('id_of_problem', 96)]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.577), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.161), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.758), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.213), ('EU_a', 1.664), ('EU_b', 2.819), ('EU_ratio', 0.590280241220291), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain'), ('id_of_problem', 97)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.537), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.178), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.74), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.085), ('EU_a', 3.225), ('EU_b', 4.84), ('EU_ratio', 0.666322314049587), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 98)]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.736), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.075), ('EU_a', 3.487), ('EU_b', 4.477), ('EU_ratio', 0.778869778869779), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache'), ('id_of_problem', 99)]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.761), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.276), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.716), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.056), ('EU_a', 1.246), ('EU_b', 0.872), ('EU_ratio', 1.42889908256881), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain'), ('id_of_problem', 100)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/problem_set.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="instruct_sample_loop_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip_instruct_samping_demo"/>
    <Routine name="sampling"/>
    <Routine name="fix"/>
    <LoopTerminator name="instruct_sample_loop_2"/>
    <Routine name="after_sampling_instructs"/>
    <LoopInitiator loopType="TrialHandler" name="sample_trial_loop_2">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.777), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.785), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.052), ('EU_a', 2.049), ('EU_b', 2.251), ('EU_ratio', 0.910262105730786), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.88), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.114), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.733), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.178), ('EU_a', 1.304), ('EU_b', 1.11), ('EU_ratio', 1.17477477477477), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.68), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.251), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.614), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.051), ('EU_a', 5.189), ('EU_b', 4.504), ('EU_ratio', 1.15208703374778), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.564), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.07), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.092), ('EU_a', 1.272), ('EU_b', 2.154), ('EU_ratio', 0.590529247910863), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.905), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.709), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.205), ('EU_a', 7.553), ('EU_b', 6.176), ('EU_ratio', 1.22295984455959), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.057), ('EU_a', 1.547), ('EU_b', 2.04), ('EU_ratio', 0.758333333333333), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.851), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.865), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.14), ('EU_a', 6.688), ('EU_b', 5.8), ('EU_ratio', 1.15310344827586), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.545), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.067), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.694), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.026), ('EU_a', 1.032), ('EU_b', 1.822), ('EU_ratio', 0.566410537870472), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.665), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.68), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.028), ('EU_a', 3.78), ('EU_b', 3.912), ('EU_ratio', 0.966257668711657), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.921), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.226), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.73), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 8.063), ('EU_b', 6.125), ('EU_ratio', 1.31640816326531), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.644), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.914), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.14), ('EU_a', 0.504), ('EU_b', 0.494), ('EU_ratio', 1.02024291497976), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.688), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.122), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.024), ('EU_a', 0.888), ('EU_b', 1.172), ('EU_ratio', 0.757679180887372), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.635), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.157), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.611), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.092), ('EU_a', 5.565), ('EU_b', 5.558), ('EU_ratio', 1.00125944584383), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.511), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.049), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.778), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.054), ('EU_a', 0.777), ('EU_b', 1.124), ('EU_ratio', 0.691281138790035), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.675), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.105), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.775), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.176), ('EU_a', 1.245), ('EU_b', 0.846), ('EU_ratio', 1.47163120567376), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.836), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.703), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.185), ('EU_a', 6.548), ('EU_b', 4.514), ('EU_ratio', 1.45059813912273), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.922), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.062), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.563), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.056), ('EU_a', 0.364), ('EU_b', 0.227), ('EU_ratio', 1.60352422907489), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.584), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.015), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.658), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 3.953), ('EU_b', 4.39), ('EU_ratio', 0.900455580865604), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.804), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.064), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.889), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.163), ('EU_a', 3.7), ('EU_b', 3.956), ('EU_ratio', 0.935288169868554), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.648), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.541), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.029), ('EU_a', 4.478), ('EU_b', 3.497), ('EU_ratio', 1.28052616528453), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.696), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.189), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.643), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.223), ('EU_a', 1.203), ('EU_b', 1.063), ('EU_ratio', 1.13170272812794), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.642), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.213), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.902), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.042), ('EU_a', 6.207), ('EU_b', 8.684), ('EU_ratio', 0.714762782128052), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.828), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.033), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.81), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.104), ('EU_a', 5.631), ('EU_b', 5.462), ('EU_ratio', 1.03094104723544), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.666), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.054), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.827), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.087), ('EU_a', 0.846), ('EU_b', 1.393), ('EU_ratio', 0.607322325915291), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.825), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.881), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.199), ('EU_a', 1.27), ('EU_b', 1.563), ('EU_ratio', 0.812539987204095), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.215), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.8), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.188), ('EU_a', 4.73), ('EU_b', 6.212), ('EU_ratio', 0.761429491307147), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.517), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.085), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.835), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.072), ('EU_a', 1.99), ('EU_b', 3.527), ('EU_ratio', 0.564218882903317), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.9), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.786), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.181), ('EU_a', 7.08), ('EU_b', 5.745), ('EU_ratio', 1.23237597911227), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.676), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.218), ('EU_a', 4.5), ('EU_b', 3.779), ('EU_ratio', 1.19079121460704), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.784), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.208), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 4.496), ('EU_b', 3.632), ('EU_ratio', 1.23788546255507), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.769), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.091), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.681), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.219), ('EU_a', 3.481), ('EU_b', 2.091), ('EU_ratio', 1.66475370636059), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.132), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.782), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.036), ('EU_b', 3.77), ('EU_ratio', 1.07055702917772), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.896), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.117), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.137), ('EU_a', 4.674), ('EU_b', 2.895), ('EU_ratio', 1.61450777202073), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.944), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.135), ('EU_a', 3.302), ('EU_b', 5.663), ('EU_ratio', 0.583083171463888), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.575), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.014), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.724), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.183), ('EU_a', 1.585), ('EU_b', 1.257), ('EU_ratio', 1.26093874303898), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.791), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.019), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.631), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.019), ('EU_a', 2.974), ('EU_b', 2.353), ('EU_ratio', 1.26391840203995), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.796), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.108), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.838), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.2), ('EU_a', 4.128), ('EU_b', 3.628), ('EU_ratio', 1.13781697905182), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.08), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.779), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 5.8), ('EU_b', 5.782), ('EU_ratio', 1.00311310965064), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.752), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.146), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.624), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.037), ('EU_a', 6.33), ('EU_b', 5.32), ('EU_ratio', 1.18984962406015), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.674), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.101), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 6.538), ('EU_b', 6.24), ('EU_ratio', 1.04775641025641), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.097), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.666), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.02), ('EU_a', 3.994), ('EU_b', 4.522), ('EU_ratio', 0.883237505528527), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.561), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.199), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.824), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.151), ('EU_a', 5.212), ('EU_b', 7.636), ('EU_ratio', 0.682556312205343), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.767), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.03), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.871), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.117), ('EU_a', 2.858), ('EU_b', 2.665), ('EU_ratio', 1.07242026266417), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.766), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.635), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.136), ('EU_a', 1.2), ('EU_b', 0.862), ('EU_ratio', 1.39211136890951), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.609), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.164), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.691), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.081), ('EU_a', 4.099), ('EU_b', 4.675), ('EU_ratio', 0.876791443850267), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.747), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.038), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.791), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.031), ('EU_a', 1.114), ('EU_b', 1.365), ('EU_ratio', 0.816117216117216), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.654), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.193), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.58), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.248), ('EU_a', 3.538), ('EU_b', 3.232), ('EU_ratio', 1.09467821782178), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.754), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.088), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.833), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.235), ('EU_a', 2.312), ('EU_b', 2.392), ('EU_ratio', 0.966555183946488), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.141), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.072), ('EU_a', 6.433), ('EU_b', 8.67), ('EU_ratio', 0.741983852364475), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.697), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.026), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.667), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.119), ('EU_a', 1.186), ('EU_b', 1.215), ('EU_ratio', 0.976131687242798), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.709), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.072), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.797), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.044), ('EU_a', 4.315), ('EU_b', 5.139), ('EU_ratio', 0.839657520918467), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.541), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.609), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.054), ('EU_a', 1.333), ('EU_b', 1.449), ('EU_ratio', 0.919944789510007), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.713), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.763), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.041), ('EU_a', 4.891), ('EU_b', 4.972), ('EU_ratio', 0.983708769106999), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.659), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.227), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.594), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.134), ('EU_a', 5.045), ('EU_b', 3.948), ('EU_ratio', 1.27786220871327), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.719), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.025), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.843), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.131), ('EU_a', 1.188), ('EU_b', 1.293), ('EU_ratio', 0.918793503480278), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.77), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.016), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.62), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.091), ('EU_a', 4.476), ('EU_b', 3.174), ('EU_ratio', 1.41020793950851), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.645), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.677), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.017), ('EU_a', 1.25), ('EU_b', 1.912), ('EU_ratio', 0.653765690376569), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.628), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.12), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.858), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.168), ('EU_a', 3.168), ('EU_b', 4.812), ('EU_ratio', 0.658354114713217), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.569), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.16), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.795), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.071), ('EU_a', 3.912), ('EU_b', 5.65), ('EU_ratio', 0.692389380530973), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.566), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.06), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.192), ('EU_a', 4.108), ('EU_b', 5.36), ('EU_ratio', 0.766417910447761), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.86), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.104), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.659), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.138), ('EU_a', 1.748), ('EU_b', 1.563), ('EU_ratio', 1.11836212412028), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.169), ('EU_a', 5.488), ('EU_b', 6.43), ('EU_ratio', 0.853499222395023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.79), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.244), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.672), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.117), ('EU_a', 1.882), ('EU_b', 0.963), ('EU_ratio', 1.95430944963655), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.735), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.047), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.808), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.221), ('EU_a', 1.376), ('EU_b', 0.732), ('EU_ratio', 1.87978142076503), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.571), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.261), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.014), ('EU_a', 4.878), ('EU_b', 4.486), ('EU_ratio', 1.08738296923763), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.738), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.083), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.722), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.13), ('EU_a', 1.227), ('EU_b', 1.184), ('EU_ratio', 1.03631756756757), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.711), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.145), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.536), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.139), ('EU_a', 4.673), ('EU_b', 4.149), ('EU_ratio', 1.12629549288985), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.845), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.869), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.068), ('EU_a', 3.218), ('EU_b', 3.068), ('EU_ratio', 1.04889178617992), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.807), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.051), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.744), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.03), ('EU_a', 7.611), ('EU_b', 7.14), ('EU_ratio', 1.06596638655462), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.556), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.029), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.715), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.105), ('EU_a', 3.046), ('EU_b', 3.555), ('EU_ratio', 0.856821378340366), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.606), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.036), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.577), ('b_side_effect_v', 'Durchfall'), ('b_side_effect_p', 0.105), ('EU_a', 5.202), ('EU_b', 4.878), ('EU_ratio', 1.06642066420664), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Diarrea'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.611), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.627), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.127), ('EU_a', 5.04), ('EU_b', 4.373), ('EU_ratio', 1.15252686942602), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.162), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.756), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.103), ('EU_a', 4.597), ('EU_b', 4.777), ('EU_ratio', 0.962319447351894), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.693), ('a_side_effect_v', 'Sprachstörungen'), ('a_side_effect_p', 0.031), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.708), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.18), ('EU_a', 1.169), ('EU_b', 1.056), ('EU_ratio', 1.10700757575758), ('ENG_a_side_effect_v', 'Speech Disorder'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.671), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.229), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.764), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.262), ('EU_a', 3.126), ('EU_b', 3.558), ('EU_ratio', 0.87858347386172), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.794), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.2), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.837), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.018), ('EU_a', 5.352), ('EU_b', 6.516), ('EU_ratio', 0.821362799263352), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'schwere Rückenschmerzen'), ('a_benefit_p', 0.741), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.02), ('b_benefit_v', 'schwere Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.198), ('EU_a', 6.469), ('EU_b', 4.941), ('EU_ratio', 1.30924913985023), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'severe back pain'), ('ENG_b_benefit_v', 'severe back pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.751), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.058), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.604), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.074), ('EU_a', 4.793), ('EU_b', 3.636), ('EU_ratio', 1.31820682068207), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.733), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.167), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.799), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.038), ('EU_a', 3.897), ('EU_b', 4.452), ('EU_ratio', 0.875336927223719), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.812), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.037), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.817), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.199), ('EU_a', 0.59), ('EU_b', 0.419), ('EU_ratio', 1.40811455847255), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.626), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.205), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.571), ('b_side_effect_v', 'Gedächtnisverlust'), ('b_side_effect_p', 0.027), ('EU_a', 1.047), ('EU_b', 0.926), ('EU_ratio', 1.13066954643629), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Memory Loss'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.892), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.05), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.617), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.046), ('EU_a', 5.152), ('EU_b', 3.518), ('EU_ratio', 1.46446844798181), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.742), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.052), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.688), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.112), ('EU_a', 1.758), ('EU_b', 1.504), ('EU_ratio', 1.1688829787234), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.595), ('a_side_effect_v', 'Juckreiz'), ('a_side_effect_p', 0.187), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.669), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.065), ('EU_a', 1.411), ('EU_b', 1.617), ('EU_ratio', 0.872603586889301), ('ENG_a_side_effect_v', 'Itching'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.668), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.153), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.846), ('b_side_effect_v', 'Schlaflosigkeit'), ('b_side_effect_p', 0.082), ('EU_a', 6.221), ('EU_b', 7.968), ('EU_ratio', 0.780747991967872), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Insomnia'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'leichte Halsschmerzen'), ('a_benefit_p', 0.716), ('a_side_effect_v', 'Schlaflosigkeit'), ('a_side_effect_p', 0.074), ('b_benefit_v', 'leichte Halsschmerzen'), ('b_benefit_p', 0.676), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.176), ('EU_a', 0.272), ('EU_b', 0.5), ('EU_ratio', 0.544), ('ENG_a_side_effect_v', 'Insomnia'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'mild sore throat'), ('ENG_b_benefit_v', 'mild sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.012), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.706), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.122), ('EU_a', 3.53), ('EU_b', 3.408), ('EU_ratio', 1.03579812206573), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.536), ('a_side_effect_v', 'Gedächtnisverlust'), ('a_side_effect_p', 0.087), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.766), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.037), ('EU_a', 3.592), ('EU_b', 5.943), ('EU_ratio', 0.604408547871445), ('ENG_a_side_effect_v', 'Memory Loss'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.695), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.166), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.596), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.09), ('EU_a', 4.035), ('EU_b', 3.722), ('EU_ratio', 1.08409457281032), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.832), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.118), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.903), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.193), ('EU_a', 2.738), ('EU_b', 3.419), ('EU_ratio', 0.800818952910208), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Halsschmerzen'), ('a_benefit_p', 0.837), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.136), ('b_benefit_v', 'mittlere Halsschmerzen'), ('b_benefit_p', 0.718), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.029), ('EU_a', 3.641), ('EU_b', 3.474), ('EU_ratio', 1.04807138744963), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate sore throat'), ('ENG_b_benefit_v', 'moderate sore throat')]), OrderedDict([('a_benefit_v', 'schwere Halsschmerzen'), ('a_benefit_p', 0.793), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.013), ('b_benefit_v', 'schwere Halsschmerzen'), ('b_benefit_p', 0.637), ('b_side_effect_v', 'Schwindel'), ('b_side_effect_p', 0.089), ('EU_a', 6.214), ('EU_b', 4.651), ('EU_ratio', 1.33605676198667), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Dizziness'), ('ENG_a_benefit_v', 'severe sore throat'), ('ENG_b_benefit_v', 'severe sore throat')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.73), ('a_side_effect_v', 'Depression'), ('a_side_effect_p', 0.01), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.566), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.092), ('EU_a', 4.28), ('EU_b', 2.752), ('EU_ratio', 1.55523255813954), ('ENG_a_side_effect_v', 'Depression'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'mittlere Rückenschmerzen'), ('a_benefit_p', 0.897), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.107), ('b_benefit_v', 'mittlere Rückenschmerzen'), ('b_benefit_p', 0.629), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.06), ('EU_a', 4.954), ('EU_b', 3.174), ('EU_ratio', 1.56080655324512), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'moderate back pain'), ('ENG_b_benefit_v', 'moderate back pain')]), OrderedDict([('a_benefit_v', 'leichte Kopfschmerzen'), ('a_benefit_p', 0.604), ('a_side_effect_v', 'Halluzinationen'), ('a_side_effect_p', 0.043), ('b_benefit_v', 'leichte Kopfschmerzen'), ('b_benefit_p', 0.514), ('b_side_effect_v', 'Sprachstörungen'), ('b_side_effect_p', 0.071), ('EU_a', 1.425), ('EU_b', 1.045), ('EU_ratio', 1.36363636363636), ('ENG_a_side_effect_v', 'Hallucination'), ('ENG_b_side_effect_v', 'Speech Disorder'), ('ENG_a_benefit_v', 'mild head ache'), ('ENG_b_benefit_v', 'mild head ache')]), OrderedDict([('a_benefit_v', 'schwere Kopfschmerzen'), ('a_benefit_p', 0.703), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.066), ('b_benefit_v', 'schwere Kopfschmerzen'), ('b_benefit_p', 0.597), ('b_side_effect_v', 'Juckreiz'), ('b_side_effect_p', 0.158), ('EU_a', 6.7), ('EU_b', 5.654), ('EU_ratio', 1.18500176865936), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Itching'), ('ENG_a_benefit_v', 'severe head ache'), ('ENG_b_benefit_v', 'severe head ache')]), OrderedDict([('a_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('a_benefit_p', 0.577), ('a_side_effect_v', 'Fieber'), ('a_side_effect_p', 0.161), ('b_benefit_v', 'mittlere Schmerzen im Brustkorb'), ('b_benefit_p', 0.758), ('b_side_effect_v', 'Blähungen'), ('b_side_effect_p', 0.213), ('EU_a', 1.664), ('EU_b', 2.819), ('EU_ratio', 0.590280241220291), ('ENG_a_side_effect_v', 'Fever'), ('ENG_b_side_effect_v', 'Flatulence'), ('ENG_a_benefit_v', 'moderate chest pain'), ('ENG_b_benefit_v', 'moderate chest pain')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.537), ('a_side_effect_v', 'Durchfall'), ('a_side_effect_p', 0.178), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.74), ('b_side_effect_v', 'Fieber'), ('b_side_effect_p', 0.085), ('EU_a', 3.225), ('EU_b', 4.84), ('EU_ratio', 0.666322314049587), ('ENG_a_side_effect_v', 'Diarrea'), ('ENG_b_side_effect_v', 'Fever'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'mittlere Kopfschmerzen'), ('a_benefit_p', 0.596), ('a_side_effect_v', 'Schwindel'), ('a_side_effect_p', 0.137), ('b_benefit_v', 'mittlere Kopfschmerzen'), ('b_benefit_p', 0.736), ('b_side_effect_v', 'Halluzinationen'), ('b_side_effect_p', 0.075), ('EU_a', 3.487), ('EU_b', 4.477), ('EU_ratio', 0.778869778869779), ('ENG_a_side_effect_v', 'Dizziness'), ('ENG_b_side_effect_v', 'Hallucination'), ('ENG_a_benefit_v', 'moderate head ache'), ('ENG_b_benefit_v', 'moderate head ache')]), OrderedDict([('a_benefit_v', 'leichte Rückenschmerzen'), ('a_benefit_p', 0.761), ('a_side_effect_v', 'Blähungen'), ('a_side_effect_p', 0.276), ('b_benefit_v', 'leichte Rückenschmerzen'), ('b_benefit_p', 0.716), ('b_side_effect_v', 'Depression'), ('b_side_effect_p', 0.056), ('EU_a', 1.246), ('EU_b', 0.872), ('EU_ratio', 1.42889908256881), ('ENG_a_side_effect_v', 'Flatulence'), ('ENG_b_side_effect_v', 'Depression'), ('ENG_a_benefit_v', 'mild back pain'), ('ENG_b_benefit_v', 'mild back pain')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/problem_set.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="sample_trial_loop_2" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="skip2"/>
    <Routine name="sampling"/>
    <Routine name="fix"/>
    <LoopTerminator name="sample_trial_loop_2"/>
    <Routine name="tactics"/>
    <Routine name="all_tasks_done"/>
    <LoopInitiator loopType="TrialHandler" name="ill_rating_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('combined_symptom', 'leichte Halsschmerzen'), ('m', 1.85), ('sem', 0.3346246915733002), ('upper', 2.1846246915733003), ('lower', 1.5153753084267), ('intensity', 1), ('translation', 'mild sore throat')]), OrderedDict([('combined_symptom', 'leichte Rückenschmerzen'), ('m', 2.1), ('sem', 0.3546681176596093), ('upper', 2.454668117659609), ('lower', 1.7453318823403907), ('intensity', 2), ('translation', 'mild back pain')]), OrderedDict([('combined_symptom', 'leichte Kopfschmerzen'), ('m', 2.75), ('sem', 0.4222433820490387), ('upper', 3.1722433820490386), ('lower', 2.327756617950961), ('intensity', 3), ('translation', 'mild head ache')]), OrderedDict([('combined_symptom', 'mittlere Schmerzen im Brustkorb'), ('m', 4.25), ('sem', 0.3690314492374814), ('upper', 4.6190314492374815), ('lower', 3.8809685507625193), ('intensity', 4), ('translation', 'moderate chest pain')]), OrderedDict([('combined_symptom', 'mittlere Halsschmerzen'), ('m', 4.35), ('sem', 0.364727728298074), ('upper', 4.714727728298073), ('lower', 3.9852722717019256), ('intensity', 5), ('translation', 'moderate sore throat')]), OrderedDict([('combined_symptom', 'mittlere Rückenschmerzen'), ('m', 4.6), ('sem', 0.265567911821955), ('upper', 4.865567911821954), ('lower', 4.334432088178045), ('intensity', 6), ('translation', 'moderate back pain')]), OrderedDict([('combined_symptom', 'mittlere Kopfschmerzen'), ('m', 4.95), ('sem', 0.3032716343651781), ('upper', 5.253271634365178), ('lower', 4.646728365634822), ('intensity', 7), ('translation', 'moderate head ache')]), OrderedDict([('combined_symptom', 'schwere Halsschmerzen'), ('m', 6.7), ('sem', 0.4594046490610945), ('upper', 7.159404649061095), ('lower', 6.240595350938905), ('intensity', 8), ('translation', 'severe sore throat')]), OrderedDict([('combined_symptom', 'schwere Rückenschmerzen'), ('m', 7.4), ('sem', 0.3433580301115808), ('upper', 7.743358030111581), ('lower', 7.056641969888419), ('intensity', 9), ('translation', 'severe back pain')]), OrderedDict([('combined_symptom', 'schwere Kopfschmerzen'), ('m', 7.75), ('sem', 0.2603135760861059), ('upper', 8.010313576086105), ('lower', 7.489686423913894), ('intensity', 10), ('translation', 'severe head ache')])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/final_pains.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="ill_rating_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rate_illness"/>
    <LoopTerminator name="ill_rating_loop"/>
    <Routine name="fix"/>
    <Routine name="instruct_side_effects"/>
    <LoopInitiator loopType="TrialHandler" name="se_rating_loop">
      <Param name="Selected rows" updates="None" val="" valType="str"/>
      <Param name="conditions" updates="None" val="[OrderedDict([('side_effect_text', 'Blähungen'), ('m', 2.65), ('sem', 0.4772453854095781), ('upper', 3.1272453854095783), ('lower', 2.172754614590421), ('translation', 'Flatulence'), ('intensity', 1)]), OrderedDict([('side_effect_text', 'Juckreiz'), ('m', 4.3), ('sem', 0.5286527066142065), ('upper', 4.828652706614206), ('lower', 3.7713472933857934), ('translation', 'Itching'), ('intensity', 2)]), OrderedDict([('side_effect_text', 'Durchfall'), ('m', 4.55), ('sem', 0.5102888758753273), ('upper', 5.060288875875327), ('lower', 4.039711124124673), ('translation', 'Diarrea'), ('intensity', 3)]), OrderedDict([('side_effect_text', 'Fieber'), ('m', 5.15), ('sem', 0.4604059993207368), ('upper', 5.610405999320737), ('lower', 4.689594000679263), ('translation', 'Fever'), ('intensity', 4)]), OrderedDict([('side_effect_text', 'Schwindel'), ('m', 5.45), ('sem', 0.4672145906157153), ('upper', 5.917214590615716), ('lower', 4.9827854093842845), ('translation', 'Dizziness'), ('intensity', 5)]), OrderedDict([('side_effect_text', 'Schlaflosigkeit'), ('m', 6.65), ('sem', 0.4604059993207368), ('upper', 7.110405999320737), ('lower', 6.189594000679263), ('translation', 'Insomnia'), ('intensity', 6)]), OrderedDict([('side_effect_text', 'Sprachstörungen'), ('m', 6.9), ('sem', 0.4285839597165481), ('upper', 7.328583959716548), ('lower', 6.471416040283453), ('translation', 'Speech Disorder'), ('intensity', 7)]), OrderedDict([('side_effect_text', 'Gedächtnisverlust'), ('m', 7.65), ('sem', 0.364727728298074), ('upper', 8.014727728298075), ('lower', 7.285272271701927), ('translation', 'Memory Loss'), ('intensity', 8)]), OrderedDict([('side_effect_text', 'Halluzinationen'), ('m', 7.75), ('sem', 0.3760948928409592), ('upper', 8.126094892840959), ('lower', 7.37390510715904), ('translation', 'Hallucination'), ('intensity', 9)]), OrderedDict([('side_effect_text', 'Depression'), ('m', 8.05), ('sem', 0.2944665113655362), ('upper', 8.344466511365537), ('lower', 7.755533488634464), ('translation', 'Depression'), ('intensity', 10)])]" valType="str"/>
      <Param name="conditionsFile" updates="None" val="stim/final_side_effects.csv" valType="file"/>
      <Param name="endPoints" updates="None" val="[0, 1]" valType="num"/>
      <Param name="isTrials" updates="None" val="True" valType="bool"/>
      <Param name="loopType" updates="None" val="random" valType="str"/>
      <Param name="nReps" updates="None" val="1" valType="num"/>
      <Param name="name" updates="None" val="se_rating_loop" valType="code"/>
      <Param name="random seed" updates="None" val="" valType="code"/>
    </LoopInitiator>
    <Routine name="rate_side_effects"/>
    <LoopTerminator name="se_rating_loop"/>
    <Routine name="thx"/>
  </Flow>
</PsychoPy2experiment>
